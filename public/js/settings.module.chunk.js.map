{"version":3,"sources":["./src/plugins/Hardel/Settings/Services/settings.service.ts","./src/plugins/Hardel/Settings/component/NewRole/rolenew.component.html","./src/plugins/Hardel/Settings/component/NewRole/rolenew.component.ts","./src/plugins/Hardel/Settings/component/NewUser/usernew.component.html","./src/plugins/Hardel/Settings/component/NewUser/usernew.component.ts","./src/plugins/Hardel/Settings/component/Role/role.component.html","./src/plugins/Hardel/Settings/component/Role/role.component.ts","./src/plugins/Hardel/Settings/component/Roles/roles.component.html","./src/plugins/Hardel/Settings/component/Roles/roles.component.ts","./src/plugins/Hardel/Settings/component/User/user.component.html","./src/plugins/Hardel/Settings/component/User/user.component.ts","./src/plugins/Hardel/Settings/component/Users/users.component.html","./src/plugins/Hardel/Settings/component/Users/users.component.ts","./src/plugins/Hardel/Settings/component/index.ts","./src/plugins/Hardel/Settings/component/settings.component.html","./src/plugins/Hardel/Settings/component/settings.component.ts","./src/plugins/Hardel/Settings/settings.module.ts","./src/plugins/Hardel/Settings/settings.routing.ts"],"names":[],"mappings":"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","file":"settings.module.chunk.js","sourcesContent":["\n\nimport {Injectable} from '@angular/core';\nimport {Role, Permission, User} from './settings.interfaces';\nimport {HttpClient} from '@angular/common/http';\nimport 'rxjs/Rx';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\nimport {MasterService} from '@Lortom/services/master.service';\n\n@Injectable()\nexport class SettingsService extends MasterService {\n\n    listOfRoles: Role[];\n    listOfUsers: User[];\n    private _updateRoles = new Subject();\n    updateRoles$ = this._updateRoles.asObservable();\n\n    private _updateUsers = new Subject();\n    updateUsers$ = this._updateUsers.asObservable();\n\n    constructor(private http: HttpClient) {\n        super();\n        // write the api route for setting\n         const urls = [\n                { namePath : 'getPermission', path: 'permissions'},\n                { namePath : 'getRoles', path: 'roles' },\n                { namePath : 'saveRole', path: 'role'},\n                { namePath : 'getUsers', path: 'users'},\n                { namePath : 'saveUser', path: 'user'}\n            ];\n        // Add the Api to the ApiManager\n        this.apiManager.addListUrlApi(urls);\n    }\n\n    /**\n     * This function retrive the roles from the API (Laravel)\n     * @returns {Observable<R>}\n     */\n    getRolesFrom() {\n        return this.http.get(this.apiManager.getPathByName('getRoles'))\n            .map( (response: {roles: Role[]}) => {\n                return response.roles;\n            });\n\n    }\n\n    getUsersFrom() {\n        return this.http.get(this.apiManager.getPathByName('getUsers'))\n            .map(\n                (response: {users: User []}) => {\n                    return response.users;\n                }\n            );\n    }\n\n    updateRoleInList(role: Role): void {\n        this.updateItemInList(role, 'listOfRoles');\n    }\n\n    updateUserInList(user: User): void {\n        this.updateItemInList(user, 'listOfUsers');\n    }\n\n    /**\n     * This function retrive the permissions from the API (Laravel)\n     * @returns {Observable<R>}\n     */\n    getPermissionsFrom() {\n        return this.http.get(this.apiManager.getPathByName('getPermission'))\n            .map((response: {permissions: Permission[]}) =>  {\n                return response.permissions;\n            });\n    }\n\n    /**\n     * This function set the Roles\n     * @param roles\n     */\n    setRoles(roles: Role[]): void {\n        this.setItem('roles', roles);\n        this.listOfRoles = roles;\n    }\n\n    /**\n     * This function set the Users\n     * @param users\n     */\n    setUsers(users: User[]): void {\n        this.setItem('users', users);\n        this.listOfUsers = users;\n    }\n\n\n    /**\n     * This function is to set new role into the listOfRoles\n     * @param role\n     */\n    setRole(role: Role) {\n        const roles = this.getRoles();\n        roles.push(role);\n       this.deleteRoleFromCache();\n       this.setRoles(roles);\n    }\n\n    /**\n     * This function is to set new User into the listOfUsers\n     * @param user\n     */\n    setUser(user: User) {\n        const users = this.getUsers();\n        users.push(user);\n        this.deleteUserFromCache();\n        this.setUsers(users);\n    }\n\n\n    /**\n     * This function delete listOfRoles from Cache\n     */\n    deleteRoleFromCache(): void {\n        this.deleteItem('roles', 'listOfRoles');\n    }\n\n    /**\n     * This function delete listOfUsers from Cache\n     */\n    deleteUserFromCache(): void {\n        this.deleteItem('users', 'listOfUsers');\n    }\n\n    /**\n     * This function check if Dataset of Roles exist\n     * @returns {boolean}\n     */\n    checkRolesExist() {\n        return this.checkItemExist('roles');\n    }\n\n    /**\n     * This function check if Dataset of Users exist\n     * @returns {boolean}\n     */\n    checkUsersExist() {\n        return this.checkItemExist('users');\n    }\n\n    /**\n     * This function return Role passing a property\n     * @param name\n     * @param value\n     * @returns {Role}\n     */\n    getRoleByProperty(name: string, value: any) {\n        return this.getItemByProperty(name, value, 'roles', 'listOfRoles') as Role;\n    }\n\n    /**\n     * This function return User passing a property\n     * @param name\n     * @param value\n     * @returns {User}\n     */\n    getUserByProperty(name: string, value: any): User {\n        return this.getItemByProperty(name, value, 'users', 'listOfUsers') as User;\n    }\n\n    /**\n     * This function check if a role has permission\n     * @param role\n     * @param permission\n     * @returns {boolean}\n     */\n    roleHasPermission(role: Role, permission: string) {\n        let response = false;\n\n        role.permissions.forEach(\n            (p: Permission) => {\n               if (p.name === permission) {\n                   response = true;\n               }\n            });\n        return response;\n    }\n\n    /**\n     * This function return a Role Array\n     * @returns {Role[]}\n     */\n    getRoles(): Role [] {\n\n        return this.getItem('roles', 'listOfRoles') as Role[];\n    }\n\n    /**\n     * This function return a User Array\n     * @returns {User[]}\n     */\n    getUsers(): User [] {\n        return this.getItem('users', 'listOfUsers') as User[];\n    }\n\n    /**\n     * This function call API in order to Update the Role\n     * @param role\n     * @returns {Observable<R>}\n     */\n    saveRole(role: Role): Observable<any> {\n\n        return this.http.put(this.apiManager.getPathByName('saveRole'), role, this.getOptions())\n            .map((response: {role: Role}) => {\n                return response.role;\n            });\n    }\n\n    /**\n     * This function call API in order to update the User\n     * @param user\n     * @returns {Observable<R>}\n     */\n    saveUser(user: User): Observable<any> {\n\n        return this.http.put(this.apiManager.getPathByName('saveUser'), user, this.getOptions())\n            .map((response: {user: User}) => {\n                return response.user;\n            });\n    }\n\n    /**\n     * This function call API in order to create new Role\n     * @param role\n     * @returns {Observable<R>}\n     */\n    newRole(role: Role): Observable<any> {\n\n        return this.http.post(this.apiManager.getPathByName('saveRole'), role, this.getOptions())\n            .map(\n                (response: {role: Role}) => {\n                    return response.role;\n                }\n            );\n    }\n\n    /**\n     * This function call API in order to create new User\n     * @param user\n     * @returns {Observable<R>}\n     */\n    newUser(user: User): Observable<any> {\n\n        return this.http.post(this.apiManager.getPathByName('saveUser'), user, this.getOptions())\n            .map(\n                (response: {user: User}) => {\n                    return response.user;\n                }\n            );\n    }\n\n    /**\n     * This function call API in order to delete Array of Role\n     * @param roles\n     * @returns {Observable<R>}\n     */\n    deleteRoles(roles: Role[]): Observable<any> {\n\n        return this.http.put(this.apiManager.getPathByName('getRoles'), roles, this.getOptions())\n            .map(\n                (response: {roles: Role[]}) => {\n                    return response.roles;\n                }\n            );\n    }\n\n    /**\n     * This function call API in order to delete Array of User\n     * @param users\n     * @returns {Observable<R>}\n     */\n    deleteUsers (users: User[]): Observable<any> {\n\n        return this.http.put(this.apiManager.getPathByName('getUsers'), users, this.getOptions())\n            .map(\n                (response: {users: User[]}) => {\n                    return response.users;\n                }\n            );\n    }\n\n    /**\n     * This function emit an Event\n     */\n    updateListOfRoles() {\n        this._updateRoles.next();\n    }\n\n    /**\n     * This function emit an Event\n     */\n    updateListOfUsers() {\n        this._updateUsers.next();\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/Services/settings.service.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"role.name\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-list\\\"></i>\\n                <span>Permissions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\">\\n                    <i class=\\\"fa fa-plus\\\"></i>\\n                    Add\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"role.permissions.length > 0\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let permission of role.permissions\\\">\\n                                        <td>\\n                                            {{permission.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"td_orange\\\" (click)=\\\"erasePermission(permission)\\\" *ngIf=\\\"isEdit == true\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n    <div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <div class=\\\"modal-title\\\">\\n                        Searching For Permission\\n                        <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label class=\\\"col-md-4\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                        <ul>\\n                                            <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                                <a (click)=\\\"addPermissions(item)\\\">{{item.name}}</a>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <div class=\\\"m-footer\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Settings/component/NewRole/rolenew.component.html\n// module id = ./src/plugins/Hardel/Settings/component/NewRole/rolenew.component.html\n// module chunks = settings.module","\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Permission, Role} from \"../../Services/settings.interfaces\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector : 'settings-new-role',\n    templateUrl : './rolenew.component.html',\n    styles : ['']\n})\n\nexport class RoleNewComponent implements OnInit\n{\n    role : Role;\n    copyRole : Role;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    listPermissions = [];\n    filteredList : Permission[];\n    query : string;\n\n    constructor(private sService : SettingsService, private router : Router){\n        this.isEdit = false;\n        this.filteredList = [];\n        this.query = '';\n\n        this.role = {\n            id: -1,\n            name : '',\n            check : false,\n            permissions : []\n        }\n    }\n    ngOnInit(){\n        this.retrivePermission();\n    }\n\n    private retrivePermission()\n    {\n        this.sService.getPermissionsFrom().subscribe(\n            (perms : Permission []) => {\n                this.listPermissions = perms;\n                this.role.permissions.forEach((item : Permission)=>{\n                    let index = -1;\n                    for(let i = 0; i<this.listPermissions.length; i++)\n                    {\n                        let m = this.listPermissions[i];\n\n                        if(m.id === item.id && m.name === item.name)\n                        {\n                            index = i;\n                            break;\n                        }\n                    }\n                    if(index > -1){\n                        this.listPermissions.splice(index,1);\n                    }\n                });\n            }\n        );\n        this.cloneRole();\n    }\n\n    /**\n     * This function filter permission for research\n     */\n    filter(){\n        if (this.query !== \"\") {\n            this.filteredList = this.listPermissions.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n    }\n\n    /**\n     * This function delete Permission from role.permissions\n     * @param item\n     */\n    erasePermission(item) {\n        // cancella il permesso\n        this.listPermissions.push(item);\n        let index = this.role.permissions.indexOf(item);\n\n        if(index > -1)\n        {\n            this.role.permissions.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This Function add Permission at the moment to role.permissions\n     * @param item\n     */\n    addPermissions(item : Permission) {\n        //aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.role.permissions.push(item);\n        let index = this.listPermissions.indexOf(item);\n\n        if(index > -1)\n        {\n            this.listPermissions.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This function go to save Mode\n     */\n    saveMode() {\n        //salva i cambiamenti\n\n        if(!this.isEqual(this.role,this.copyRole))\n        {\n            if(this.role.name.length == 0)\n            {\n                alert('You must write a name of Role, please!');\n                this.cloneCopyRole();\n                return;\n            }\n\n            this.sService.newRole(this.role).subscribe(\n                (data : any) => {\n                    if(!data.hasOwnProperty('state'))\n                    {\n                        data.state = false;\n                    }\n                    //push the item into roles\n                        this.sService.setRole(data);\n                        this.sService.updateListOfRoles();\n                    //navigate to Settings Roles\n                        this.router.navigate(['/backend/settings/roles']);\n                }\n            );\n\n        }\n    }\n\n    isEqual(v,v2) : boolean\n    {\n        return (v.name == v2.name) && (v.state == v2.state) && (v.permissions.length == v2.permissions.length)\n    }\n\n    /**\n     * This function clone the Role\n     */\n    cloneRole(){\n        let permissions: Permission[] = [];\n\n        for(let perm of this.role.permissions)\n        {\n            permissions.push(perm);\n        }\n\n        this.copyRole = Object.assign({},this.role);\n        this.copyRole.permissions = permissions;\n    }\n\n    /**\n     * This function clone the CopyRole\n     */\n    cloneCopyRole()\n    {\n        let permissions: Permission[] = [];\n\n        for(let perm of this.copyRole.permissions)\n        {\n            permissions.push(perm);\n        }\n\n        this.role = Object.assign({},this.copyRole);\n        this.role.permissions = permissions;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/component/NewRole/rolenew.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"user.name\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Email</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" id=\\\"email\\\" [(ngModel)] = \\\"user.email\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Password</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" [(ngModel)] = \\\"user.password\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-list\\\"></i>\\n                <span>Role</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\">\\n                    <i class=\\\"fa fa-plus\\\"></i>\\n                    Add\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"user.role !== undefined\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr>\\n                                        <td>\\n                                            {{user.role.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"td_orange\\\" (click)=\\\"eraseRole(user.role)\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n    <div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <div class=\\\"modal-title\\\">\\n                        Searching For Permission\\n                        <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label class=\\\"col-md-4\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                        <ul>\\n                                            <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                                <a (click)=\\\"addRole(item)\\\">{{item.name}}</a>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <div class=\\\"m-footer\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Settings/component/NewUser/usernew.component.html\n// module id = ./src/plugins/Hardel/Settings/component/NewUser/usernew.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 09/11/2017.\n */\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Permission, Role, User} from \"../../Services/settings.interfaces\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector : 'settings-new-user',\n    templateUrl : './usernew.component.html',\n    styles : ['']\n})\n\nexport class UserNewComponent implements OnInit\n{\n    user : User;\n    copyUser : User;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    listRole = [];\n    filteredList : Role[];\n    query : string;\n\n    constructor(private nService : SettingsService, private router : Router){\n        this.filteredList = [];\n        this.query = '';\n\n        this.user = {\n            id: -1,\n            name : '',\n            check : false,\n            email : ''\n        }\n    }\n    ngOnInit(){\n        this.retriveRoles();\n    }\n\n    private retriveRoles()\n    {\n        this.nService.getRolesFrom().subscribe(\n            (roles : Role []) => {\n                this.listRole = roles;\n            }\n        );\n        this.cloneUser();\n    }\n\n    /**\n     * This function filter permission for research\n     */\n    filter(){\n        if (this.query !== \"\") {\n            this.filteredList = this.listRole.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n    }\n\n    /**\n     * This function delete Role from user.role\n     * @param item\n     */\n    eraseRole(item) {\n        // cancella il permesso\n        this.listRole.push(item);\n        delete this.user.role;\n    }\n\n    /**\n     * This Function add Role at the moment to user.role\n     * @param item\n     */\n    addRole(item : Role) {\n        //aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.user.role = item;\n        let index = this.listRole.indexOf(item);\n\n        if(index > -1)\n        {\n            this.listRole.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This function go to save Mode\n     */\n    saveMode() {\n        //salva i cambiamenti\n\n        if(!this.isEqual(this.user,this.copyUser))\n        {\n            if(this.user.email.length == 0)\n            {\n                alert('You must write a name of Role, please!');\n                this.cloneCopyUser();\n                return;\n            }\n\n            this.nService.newUser(this.user).subscribe(\n                (data : any) => {\n                    if(!data.hasOwnProperty('state'))\n                    {\n                        data.state = false;\n                    }\n                    //push the item into roles\n                    this.nService.setUser(data);\n                    this.nService.updateListOfUsers();\n                    //navigate to Settings Roles\n                    this.router.navigate(['/backend/settings/users']);\n                }\n            );\n\n        }\n    }\n\n    isEqual(v,v2) : boolean\n    {\n        return (v.email == v2.email) && (v.state == v2.state) && (v.name == v2.name)\n    }\n\n    /**\n     * This function clone the User\n     */\n    cloneUser(){\n        let permissions: Permission[] = [];\n\n        this.copyUser = Object.assign({}, this.user);\n        if(this.user.role !== undefined) {\n            for (let perm of this.user.role.permissions) {\n                permissions.push(perm);\n            }\n\n            let role: Role;\n\n            role = Object.assign({}, this.user.role);\n            this.copyUser.role = role;\n            this.copyUser.role.permissions = permissions;\n        }\n    }\n\n    /**\n     * This function clone the CopyUser\n     */\n    cloneCopyUser()\n    {\n        let permissions: Permission[] = [];\n\n        for(let perm of this.copyUser.role.permissions)\n        {\n            permissions.push(perm);\n        }\n\n        let role : Role;\n\n        role = Object.assign({},this.copyUser.role);\n\n        this.user = Object.assign({},this.copyUser);\n        this.user.role = role;\n        this.user.role.permissions = permissions;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/component/NewUser/usernew.component.ts","module.exports = \"<form class=\\\"form\\\" *ngIf=\\\"notFound == true\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn darkorange\\\" (click)=\\\"editMode()\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                    Edit\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" [ngModel] = \\\"role.name\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" *ngIf=\\\"isEdit === false; else editName\\\" readonly>\\n                                    <ng-template #editName>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"role.name\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-list\\\"></i>\\n                <span>Permissions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\" *ngIf=\\\"isEdit == true\\\">\\n                    <i class=\\\"fa fa-plus\\\"></i>\\n                    Add\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let permission of role.permissions\\\">\\n                                        <td>\\n                                            {{permission.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"td_orange\\\" (click)=\\\"erasePermission(permission)\\\" *ngIf=\\\"isEdit == true\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n    <div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <div class=\\\"modal-title\\\">\\n                        Searching For Permission \\n                        <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label class=\\\"col-md-4\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                        <ul>\\n                                            <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                                <a (click)=\\\"addPermissions(item)\\\">{{item.name}}</a>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <div class=\\\"m-footer\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Settings/component/Role/role.component.html\n// module id = ./src/plugins/Hardel/Settings/component/Role/role.component.html\n// module chunks = settings.module","\n\nimport {Component, OnInit, Input, OnDestroy} from '@angular/core';\nimport {SettingsService} from '../../Services/settings.service';\nimport {Permission, Role} from '../../Services/settings.interfaces';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n    selector : 'app-role',\n    templateUrl : './role.component.html',\n    styles : ['']\n})\n\nexport class RoleComponent implements OnInit, OnDestroy {\n    @Input() role: Role;\n    copyRole: Role;\n    id: number;\n    private sub: any;\n    isEdit: boolean;\n    listPermissions = [];\n    filteredList: Permission[];\n    query: string;\n    notFound: boolean;\n\n    constructor(private sService: SettingsService, private router: ActivatedRoute, private nav: Router) {\n        this.isEdit = false;\n        this.notFound = false;\n        this.filteredList = [];\n        this.query = '';\n        this.role = {\n            id : -2,\n            name : '',\n            check : false,\n            permissions : []\n        };\n        this.sub = this.router.params.subscribe(\n            (params) => {\n                this.id = +params['id'];\n                this.role = this.sService.getRoleByProperty('id', this.id);\n                if (this.role != null) {\n                    this.notFound = true;\n                } else {\n                    this.nav.navigate(['/backend/not-found']);\n                }\n                this.copyRole = Object.assign({}, this.role);\n            }\n        );\n    }\n\n    ngOnInit() {\n        this.retrivePermission();\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * This function pass into edit Mode\n     */\n    editMode() {\n        // passa in modalità edit\n        this.isEdit = !this.isEdit;\n    }\n\n    /**\n     * This function go to save Mode\n     */\n    saveMode() {\n        // salva i cambiamenti\n        if (this.role !== this.copyRole) {\n            if (this.role.name.length === 0) {\n                alert('You must write a name of Role, please!');\n                this.cloneCopyRole();\n                return;\n            }\n\n            this.sService.saveRole(this.role).subscribe(\n                (role: Role) => {\n                    this.role = role;\n                    this.retrivePermission();\n                    this.sService.updateRoleInList(this.role);\n                    this.editMode();\n                }\n            );\n        }\n    }\n\n    /**\n     * This function is to get Permission from API\n     */\n    private retrivePermission() {\n        this.sService.getPermissionsFrom().subscribe(\n            (perms: Permission []) => {\n                this.listPermissions = perms;\n                if (this.role != null) {\n                     this.role.permissions.forEach((item: Permission) => {\n                        let index = -1;\n                        for (let i = 0; i < this.listPermissions.length; i++) {\n                            const m = this.listPermissions[i];\n\n                            if (m.id === item.id && m.name === item.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        if (index > -1) {\n                            this.listPermissions.splice(index, 1);\n                        }\n                    });\n                }\n            }\n        );\n        this.cloneRole();\n    }\n\n    /**\n     * This function reset the Information of Role\n     */\n    resetMode() {\n\n        if (this.role !== this.copyRole) {\n            if (confirm('Are you sure you don\\'t want to save this changement and restore it?')) {\n                this.cloneCopyRole();\n            }\n        }\n    }\n\n    /**\n     * This Function add Permission at the moment to role.permissions\n     * @param item\n     */\n    addPermissions(item: Permission) {\n        // aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.role.permissions.push(item);\n        const index = this.listPermissions.indexOf(item);\n\n        if (index > -1) {\n            this.listPermissions.splice(index, 1);\n        }\n\n    }\n\n    /**\n     * This function delete Permission from role.permissions\n     * @param item\n     */\n    erasePermission(item) {\n        // cancella il permesso\n        this.listPermissions.push(item);\n        const index = this.role.permissions.indexOf(item);\n\n        if ( index > -1) {\n            this.role.permissions.splice(index, 1);\n        }\n\n    }\n\n    /**\n     * This function filter permission for research\n     */\n    filter() {\n        if (this.query !== '') {\n            this.filteredList = this.listPermissions.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n    }\n\n    /**\n     * This function clone the Role\n     */\n    cloneRole() {\n        if (this.role != null) {\n            const permissions: Permission[] = [];\n\n            for (const perm of this.role.permissions) {\n                permissions.push(perm);\n            }\n\n            this.copyRole = Object.assign({}, this.role);\n            this.copyRole.permissions = permissions;\n        }\n    }\n\n    /**\n     * This function clone the CopyRole\n     */\n    cloneCopyRole() {\n        const permissions: Permission[] = [];\n\n        for (const perm of this.copyRole.permissions) {\n            permissions.push(perm);\n        }\n\n        this.role = Object.assign({}, this.copyRole);\n        this.role.permissions = permissions;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/component/Role/role.component.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"active\\\">\\n            <a href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Roles</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/settings/users']\\\" data-toggle=\\\"tab\\\"> Users</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                                <lt-entry-pagination\\n                                [entry]=\\\"'50-5'\\\"\\n                                (onEntry)=\\\"onPerPage($event)\\\"\\n                                >\\n                                </lt-entry-pagination>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/settings/roles/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteRoles()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let role of listToShow\\\">\\n                                            <td>\\n                                                <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,role)\\\" [(ngModel)] = \\\"role.check\\\">\\n                                            </td>\\n                                            <td>\\n                                                {{role.name}}\\n                                            </td>\\n                                            <td>\\n                                                <a [routerLink] = \\\"['/backend/settings/roles',role.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <lt-pagination\\n                            [pagesToShow]=\\\"3\\\"\\n                            [perPage]=\\\"perPage\\\"\\n                            [count]=\\\"listaRole.length\\\"\\n                            [loading]=\\\"false\\\"\\n                            [page]=\\\"actualPage\\\"\\n                            (goNext)=\\\"onNext($event)\\\"\\n                            (goPage)=\\\"onPage($event)\\\"\\n                            (goPrev)=\\\"onPrev()\\\"\\n                        ></lt-pagination>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Settings/component/Roles/roles.component.html\n// module id = ./src/plugins/Hardel/Settings/component/Roles/roles.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 30/10/2017.\n */\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Role} from \"../../Services/settings.interfaces\";\nimport {Router} from \"@angular/router\";\nimport {ListComponent} from \"@Lortom/model/list.component\";\n\n@Component({\n    selector : 'app-roles-component',\n    templateUrl : './roles.component.html',\n    styles : ['']\n})\n\nexport class RolesComponent extends ListComponent implements OnInit\n{\n    listaRole: Role[] = [];\n    myRoot = '/backend/settings/roles';\n    isRoot = false;\n\n    constructor(public c_Service: SettingsService, public router: Router) {\n        super();\n\n        this.onComponentInit({\n            name: 'c_Service',\n            permission: 'Hardel.Settings.Roles',\n            upd: 'updateRoles$'\n        }, 'router', 'retrieveListOfRoles');\n    }\n\n    ngOnInit() {}\n\n    retrieveListOfRoles(): void {\n        this.retrieveListOfData({\n            name: 'c_Service',\n            getData: 'getRoles',\n            setData: 'setRoles',\n            callApi: 'getRolesFrom',\n            check: 'checkRolesExist'\n        }, 'listaRole');\n    }\n\n    /**\n     * function to push or splice item into Deleted List of Roles\n     * @param ev\n     * @param data\n     */\n    eventChange(ev,data : Role) : void\n    {\n       this.eventChangeData(ev,data);\n    }\n\n    deleteRoles()\n    {\n        this.deleteData({\n            name: 'c_Service',\n            setData: 'setRoles',\n            delFn: 'deleteRoles'\n        },'listaRole',\"Do you really want delete this Roles?\");\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/component/Roles/roles.component.ts","module.exports = \"<form class=\\\"form\\\" *ngIf=\\\"notFound == true\\\">\\n<div class=\\\"portlet\\\">\\n    <div class=\\\"portlet-title\\\">\\n        <div class=\\\"caption\\\">\\n            <i class=\\\"fa fa-database\\\"></i>\\n            <span>General Definitions</span>\\n        </div>\\n        <div class=\\\"actions\\\">\\n            <button class=\\\"btn darkorange\\\" (click)=\\\"editMode()\\\">\\n                <i class=\\\"fa fa-edit\\\"></i>\\n                Edit\\n            </button>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet-body\\\">\\n        <div class=\\\"portlet-form-body\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-12\\\">\\n                        <div class=\\\"form-group flex-group\\\">\\n                            <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                            <div class=\\\"col-md-4\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" [ngModel] = \\\"user.name\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" *ngIf=\\\"isEdit === false; else editName\\\" readonly>\\n                                <ng-template #editName>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"user.name\\\" >\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-12\\\">\\n                        <div class=\\\"form-group flex-group\\\">\\n                            <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Email</label>\\n                            <div class=\\\"col-md-4\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [ngModel] = \\\"user.email\\\" placeholder=\\\"Nome\\\" id=\\\"email\\\" readonly>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"portlet\\\">\\n    <div class=\\\"portlet-title\\\">\\n        <div class=\\\"caption\\\">\\n            <i class=\\\"fa fa-list\\\"></i>\\n            <span>Role</span>\\n        </div>\\n        <div class=\\\"actions\\\">\\n            <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\" *ngIf=\\\"isEdit == true\\\">\\n                <i class=\\\"fa fa-plus\\\"></i>\\n                Add\\n            </button>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet-body\\\">\\n        <div class=\\\"box\\\">\\n            <div class=\\\"box-header\\\">\\n\\n            </div>\\n            <div class=\\\"box-body\\\">\\n                <div class=\\\"wrapper\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"user.role !== undefined\\\">\\n                                <thead>\\n                                <tr>\\n                                    <th>\\n                                        <a>Nome</a>\\n                                    </th>\\n                                    <th style=\\\"width: 50px;\\\"></th>\\n                                </tr>\\n                                </thead>\\n                                <tbody>\\n                                <tr>\\n                                    <td>\\n                                        {{user.role.name}}\\n                                    </td>\\n                                    <td>\\n                                        <a *ngIf=\\\"isEdit == true\\\" class=\\\"td_orange\\\" (click)=\\\"eraseRole(user.role)\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                    </td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n        <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n    </div>\\n</div>\\n<div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <div class=\\\"modal-title\\\">\\n                    Searching For Permission\\n                    <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group flex-group\\\">\\n                            <label class=\\\"col-md-4\\\">Name</label>\\n                            <div class=\\\"col-md-4\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\" autocomplete=\\\"off\\\">\\n                                <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                    <ul>\\n                                        <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                            <a (click)=\\\"addRole(item)\\\">{{item.name}}</a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <div class=\\\"m-footer\\\">\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Settings/component/User/user.component.html\n// module id = ./src/plugins/Hardel/Settings/component/User/user.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 10/11/2017.\n */\n\n\nimport {Component, Input, OnDestroy, OnInit} from \"@angular/core\";\nimport {Permission, Role, User} from \"../../Services/settings.interfaces\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n@Component({\n    selector : 'settings-user',\n    templateUrl : './user.component.html',\n    styles : ['']\n})\n\nexport class UserComponent implements OnInit,OnDestroy\n{\n    @Input() user : User;\n    copyUser : User;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    listRoles : Role[] = [];\n    filteredList : Role[];\n    query : string;\n    notFound : boolean;\n\n    constructor(private sService : SettingsService, private router : ActivatedRoute,private nav : Router){\n        this.isEdit = false;\n        this.notFound = false;\n        this.filteredList = [];\n        this.query = '';\n        this.user = {\n            id : -2,\n            name : '',\n            email : '',\n            check : false,\n            role : null\n        };\n        this.sub = this.router.params.subscribe(\n            (params) => {\n                this.id = +params['id'];\n                this.user = this.sService.getUserByProperty('id',this.id);\n                if(this.user != null)\n                {\n                    this.notFound = true;\n                }\n                else\n                {\n                    this.nav.navigate(['/backend/not-found']);\n                }\n                this.cloneUser();\n            }\n        );\n    }\n\n    ngOnInit(){\n        this.retriveRoles();\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * This function pass into edit Mode\n     */\n    editMode(){\n        //passa in modalità edit\n        this.isEdit = !this.isEdit;\n    }\n\n    /**\n     * This function go to save Mode\n     */\n    saveMode() {\n        //salva i cambiamenti\n        if(this.user !== this.copyUser)\n        {\n            if(this.user.email.length == 0)\n            {\n                alert('You must write an email of User, please!');\n                this.cloneCopyUser();\n                return;\n            }\n\n            this.sService.saveUser(this.user).subscribe(\n                (user : User) => {\n                    this.user = user;\n                    this.retriveRoles();\n                    this.sService.updateUserInList(this.user);\n                    this.editMode();\n                }\n            );\n        }\n    }\n\n    /**\n     * This function is to get Permission from API\n     */\n    private retriveRoles()\n    {\n        this.sService.getRolesFrom().subscribe(\n            (roles : Role []) => {\n                this.listRoles = roles;\n\n                let index = this.listRoles.indexOf(this.user.role);\n\n                if(index > -1)\n                {\n                    this.listRoles.splice(index,1);\n                }\n            }\n        );\n        this.cloneUser();\n    }\n\n    /**\n     * This function reset the Information of Role\n     */\n    resetMode() {\n\n        if(this.isEqual(this.user, this.copyUser)) {\n            if (confirm('Are you sure you don\\'t want to save this changement and restore it?')) {\n                this.cloneCopyUser();\n            }\n        }\n    }\n\n    isEqual(v,v2) : boolean\n    {\n        return (v.email == v2.email) && (v.state == v2.state) && (v.name == v2.name)\n    }\n\n    /**\n     * This function delete Role from user.role\n     * @param item\n     */\n    eraseRole(item) {\n        // cancella il permesso\n        this.listRoles.push(item);\n        delete this.user.role;\n    }\n\n    /**\n     * This Function add Role at the moment to user.role\n     * @param item\n     */\n    addRole(item : Role) {\n        //aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.user.role = item;\n        let index = this.listRoles.indexOf(item);\n\n        if(index > -1)\n        {\n            this.listRoles.splice(index,1);\n        }\n\n    }\n\n\n    /**\n     * This function filter permission for research\n     */\n    filter(){\n        if (this.query !== \"\") {\n            this.filteredList = this.listRoles.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n    }\n\n    /**\n     * This function clone the User\n     */\n    cloneUser(){\n        let permissions: Permission[] = [];\n\n        this.copyUser = Object.assign({}, this.user);\n        if(this.user.role !== undefined) {\n            for (let perm of this.user.role.permissions) {\n                permissions.push(perm);\n            }\n\n            let role: Role;\n\n            role = Object.assign({}, this.user.role);\n            this.copyUser.role = role;\n            this.copyUser.role.permissions = permissions;\n        }\n    }\n\n    /**\n     * This function clone the CopyUser\n     */\n    cloneCopyUser()\n    {\n        let permissions: Permission[] = [];\n\n        for(let perm of this.copyUser.role.permissions)\n        {\n            permissions.push(perm);\n        }\n\n        let role : Role;\n\n        role = Object.assign({},this.copyUser.role);\n\n        this.user = Object.assign({},this.copyUser);\n        this.user.role = role;\n        this.user.role.permissions = permissions;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/component/User/user.component.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li>\\n            <a [routerLink]=\\\"['/backend/settings/roles']\\\" data-toggle=\\\"tab\\\"> Roles</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <a  href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Users</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                               <lt-entry-pagination\\n                               [entry]=\\\"'50-5'\\\"\\n                               (onEntry)=\\\"onPerPage($event)\\\"\\n                               >\\n                               </lt-entry-pagination>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/settings/users/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteUsers()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th>\\n                                            <a>Email</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let user of listToShow\\\">\\n                                        <td>\\n                                            <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,user)\\\" [(ngModel)] = \\\"user.check\\\">\\n                                        </td>\\n                                        <td>\\n                                            {{user.name}}\\n                                        </td>\\n                                        <td>\\n                                            {{user.email}}\\n                                        </td>\\n                                        <td>\\n                                            <a [routerLink] = \\\"['/backend/settings/users',user.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <lt-pagination\\n                            [pagesToShow]=\\\"3\\\"\\n                            [perPage]=\\\"perPage\\\"\\n                            [count]=\\\"listaUser.length\\\"\\n                            [loading]=\\\"false\\\"\\n                            [page]=\\\"actualPage\\\"\\n                            (goNext)=\\\"onNext($event)\\\"\\n                            (goPage)=\\\"onPage($event)\\\"\\n                            (goPrev)=\\\"onPrev()\\\"\\n                        ></lt-pagination>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Settings/component/Users/users.component.html\n// module id = ./src/plugins/Hardel/Settings/component/Users/users.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 09/11/2017.\n */\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {ListComponent} from \"@Lortom/model/list.component\";\nimport {User} from \"@Lortom/plugins/Hardel/Settings/Services/settings.interfaces\";\nimport {SettingsService} from \"@Lortom/plugins/Hardel/Settings/Services/settings.service\";\n\n@Component({\n    selector : 'settings-users',\n    templateUrl : './users.component.html',\n    styles : ['']\n})\n\nexport class UsersComponent extends ListComponent implements OnInit\n{\n    listaUser : User[] = [];\n    myRoot = '/backend/settings/users';\n    isRoot = false;\n\n    constructor(public s_Service : SettingsService, public router : Router) {\n\n        super();\n\n        this.onComponentInit({\n            name: 's_Service',\n            permission: 'Hardel.Settings.Users',\n            upd: 'updateUsers$'\n        },'router','retrieveListOfUsers');\n    }\n\n    ngOnInit() {}\n\n    retrieveListOfUsers() : void\n    {\n        this.retrieveListOfData({\n            name:'s_Service',\n            getData: 'getUsers',\n            setData: 'setUsers',\n            callApi: 'getUsersFrom',\n            check: 'checkUsersExist'\n        },'listaUser');\n    }\n\n    /**\n     * function to push or splice item into Deleted List of Roles\n     * @param ev\n     * @param data\n     */\n    eventChange(ev,data : User) : void\n    {\n        this.eventChangeData(ev,data);\n    }\n\n    deleteUsers()\n    {\n        this.deleteData({\n            name: 's_Service',\n            setData: 'setUsers',\n            delFn: 'deleteUsers'\n        },'listaUser',\"Do you really want delete this Users?\");\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/component/Users/users.component.ts","\n\nexport {SettingsComponent} from \"./settings.component\";\nexport {RoleComponent} from \"./Role/role.component\";\nexport {RolesComponent} from \"./Roles/roles.component\";\nexport {RoleNewComponent} from \"./NewRole/rolenew.component\";\nexport {UsersComponent} from \"./Users/users.component\";\nexport {UserNewComponent} from \"./NewUser/usernew.component\";\nexport {UserComponent}  from \"./User/user.component\";\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/component/index.ts","module.exports = \"<div class=\\\"content-box\\\">\\n    <div class=\\\"content-header\\\">\\n        <h1>Settings</h1>\\n        <breadcrumbs></breadcrumbs>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n        <div class=\\\"portlet\\\" *ngIf=\\\"isRoot === true\\\">\\n            <div class=\\\"portlet-title\\\">\\n                <div class=\\\"caption\\\">\\n                    <i class=\\\"fa fa-database\\\"></i>\\n                    <span>Overviews</span>\\n                </div>\\n                <div class=\\\"actions\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"portlet-body\\\">\\n                <div class=\\\"tiles\\\">\\n                    <a [routerLink]=\\\"['/backend/settings/users']\\\">\\n                        <div class=\\\"tile double bg-cyan\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-users fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Users\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <a [routerLink]=\\\"['/backend/settings/roles']\\\">\\n                        <div class=\\\"tile bg-orange\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                    <i class=\\\"fa fa-list fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Roles\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Settings/component/settings.component.html\n// module id = ./src/plugins/Hardel/Settings/component/settings.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 17/10/2017.\n */\n\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {SettingsService} from \"../Services/settings.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n@Component({\n    selector:'app-settings',\n    templateUrl:'./settings.component.html'\n})\n\nexport class SettingsComponent implements OnInit\n{\n    isRoot : boolean;\n    myRoot = '/backend/settings';\n    constructor(private router : Router, private service : SettingsService) {\n        if(!this.service.hasPermissions('Hardel.Settings'))\n        {\n            this.router.navigate(['/backend/dashboard']);\n        }\n\n        this.isRoot = true;\n        //trigger the event for the overview\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                       this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n    }\n\n    ngOnInit() {\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/component/settings.component.ts","/**\n * Created by hernan on 17/10/2017.\n */\n\n\nimport {NgModule} from \"@angular/core\";\nimport {routing,routedComponents} from \"./settings.routing\";\nimport {SettingsService} from \"./Services/settings.service\";\nimport {CommonModule} from \"@angular/common\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpModule} from \"@angular/http\";\nimport {BreadCrumbModule} from \"../../../app/backend-module/\";\nimport {UIElementModule} from \"../../../app/backend-module/UIElement/uielement.module\";\n\n@NgModule({\n    imports:[\n        CommonModule,\n        FormsModule,\n        HttpClientModule,\n        routing,\n        BreadCrumbModule,\n        UIElementModule\n    ],\n    providers: [SettingsService],\n    declarations: [routedComponents]\n})\n\nexport class SettingsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/settings.module.ts","\n/**\n * Created by hernan on 17/10/2017.\n */\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ModuleWithProviders} from \"@angular/core\";\nimport {RoleComponent,RoleNewComponent,RolesComponent,SettingsComponent,UsersComponent,UserNewComponent,UserComponent} from \"./component\";\n\nconst routes : Routes = [\n    {path: '' , component:SettingsComponent, data : { breadcrumb : 'Settings'} , children:[\n        {path: 'roles', component: RolesComponent, data : { breadcrumb : 'Roles'}, children: [\n            {path: 'new', component:RoleNewComponent, data : { breadcrumb : 'New Role'} },\n            {path: ':id', component:RoleComponent, data : {breadcrumb : 'Role'}},\n        ]},\n        {path: 'users', component:UsersComponent, data: {breadcrumb : 'Users'}, children: [\n            {path: 'new', component:UserNewComponent, data : { breadcrumb : 'New User'} },\n            {path: ':id', component:UserComponent, data : { breadcrumb : 'User'}}\n        ]}\n    ]}\n];\n\nexport const routing : ModuleWithProviders = RouterModule.forChild(routes);\n\nexport const routedComponents = [SettingsComponent,RolesComponent,RoleComponent,RoleNewComponent,UsersComponent, UserNewComponent, UserComponent];\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Settings/settings.routing.ts"],"sourceRoot":"webpack:///"}