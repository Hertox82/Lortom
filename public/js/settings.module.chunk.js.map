{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/Services/settings.service.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/NewRole/rolenew.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/NewRole/rolenew.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/NewUser/usernew.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/NewUser/usernew.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Role/role.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Role/role.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Roles/roles.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Roles/roles.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Users/users.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Users/users.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/index.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/settings.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/settings.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/settings.module.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/settings.routing.ts"],"names":[],"mappings":"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","file":"settings.module.chunk.js","sourcesContent":["\n\nimport {Injectable} from \"@angular/core\";\nimport {Role, Permission, User} from \"./settings.interfaces\";\nimport {Http,Response, RequestOptions, Headers} from \"@angular/http\";\nimport 'rxjs/Rx';\nimport {ApiManager} from \"../../../../app/urlApi/api.manager\";\nimport {Subject} from \"rxjs/Subject\";\nimport {Observable} from \"rxjs/Observable\";\n\n@Injectable()\nexport class SettingsService {\n\n    apiManager : ApiManager;\n    listOfRoles : Role[];\n    listOfUsers : User[];\n    private _updateRoles = new Subject();\n    updateRoles$ = this._updateRoles.asObservable();\n\n    private _updateUsers = new Subject();\n    updateUsers$ = this._updateUsers.asObservable();\n\n    constructor(private http : Http)\n    {\n        // create the ApiManager\n        this.apiManager = new ApiManager();\n        // write the api route for setting\n         const urls = [\n                { namePath : 'getPermission', path: 'permissions'},\n                { namePath : 'getRoles', path: 'roles' },\n                { namePath : 'saveRole', path: 'role'},\n                { namePath : 'getUsers', path: 'users'},\n                { namePath : 'saveUser', path: 'user'}\n            ];\n        //Add the Api to the ApiManager\n        this.apiManager.addListUrlApi(urls);\n    }\n\n    /**\n     * This function retrive the roles from the API (Laravel)\n     * @returns {Observable<R>}\n     */\n    getRolesFrom()\n    {\n        return this.http.get(this.apiManager.getPathByName('getRoles'))\n            .map( (response : Response) => {\n                return response.json().roles;\n            });\n\n    }\n\n    getUsersFrom()\n    {\n        return this.http.get(this.apiManager.getPathByName('getUsers'))\n            .map(\n                (response : Response) => {\n                    return response.json().users;\n                }\n            );\n    }\n\n    /**\n     * This function retrive the permissions from the API (Laravel)\n     * @returns {Observable<R>}\n     */\n    getPermissionsFrom()\n    {\n        return this.http.get(this.apiManager.getPathByName('getPermission'))\n            .map((response : Response) =>  {\n                return response.json().permissions;\n            });\n    }\n\n    /**\n     * This function set the Roles\n     * @param roles\n     */\n    setRoles(roles : Role[])\n    {\n        sessionStorage.setItem('roles',JSON.stringify(roles));\n        this.listOfRoles = roles;\n    }\n\n    setUsers(users : User[])\n    {\n        sessionStorage.setItem('users',JSON.stringify(users));\n        this.listOfUsers = users;\n    }\n\n\n    /**\n     * This function is to set new User into the listOfRoles\n     * @param role\n     */\n    setRole(role : Role)\n    {\n        let roles = this.getRoles();\n        roles.push(role);\n       this.deleteRoleFromCache();\n       this.setRoles(roles);\n    }\n\n    setUser(user : User)\n    {\n        let users = this.getUsers();\n        users.push(user);\n        this.deleteUserFromCache();\n        this.setUsers(users);\n    }\n\n\n    deleteRoleFromCache()\n    {\n        this.listOfRoles = null;\n        sessionStorage.removeItem('roles');\n    }\n\n    deleteUserFromCache()\n    {\n        this.listOfUsers = null;\n        sessionStorage.removeItem('users');\n    }\n\n    /**\n     * This function check if Dataset of Roles exist\n     * @returns {boolean}\n     */\n    checkRolesExist()\n    {\n        return (sessionStorage.getItem('roles') !== null);\n    }\n\n    checkUsersExist()\n    {\n        return (sessionStorage.getItem('users') !== null);\n    }\n\n    /**\n     * This function return Role passing a property\n     * @param name\n     * @param value\n     * @returns {Role}\n     */\n    getRoleByProperty(name : string, value : any)\n    {\n        let response: Role;\n        response = null;\n\n        if(this.listOfRoles == null)\n        {\n            this.listOfRoles = JSON.parse(sessionStorage.getItem('roles'));\n        }\n        this.listOfRoles.forEach(\n            (role : Role) => {\n                if(role[name] === value)\n                {\n                    response = role;\n                }\n            }\n        );\n\n        return response;\n    }\n\n    /**\n     * This function check if a role has permission\n     * @param role\n     * @param permission\n     * @returns {boolean}\n     */\n    roleHasPermission(role: Role, permission : string)\n    {\n        let response = false;\n\n        role.permissions.forEach(\n            (p : Permission) => {\n               if(p.name === permission)\n               {\n                   response = true;\n               }\n            });\n        return response;\n    }\n\n    /**\n     * This function get The Roles\n     * @returns {any}\n     */\n    getRoles(){\n        if(this.listOfRoles == null)\n        {\n            return JSON.parse(sessionStorage.getItem('roles'));\n        }\n        else\n        {\n            return this.listOfRoles;\n        }\n    }\n\n    getUsers()\n    {\n        if(this.listOfUsers == null)\n        {\n            return JSON.parse(sessionStorage.getItem('users'));\n        }\n        else\n        {\n            return this.listOfUsers;\n        }\n    }\n\n    saveRole(role : Role) : Observable<any> {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n        return this.http.put(this.apiManager.getPathByName('saveRole'),role,options)\n            .map((response : Response) => {\n                return response.json().role;\n            });\n    }\n\n    newRole(role : Role) : Observable<any> {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n        return this.http.post(this.apiManager.getPathByName('saveRole'),role,options)\n            .map(\n                (response : Response) => {\n                    return response.json().role;\n                }\n            );\n    }\n\n    newUser(user : User) : Observable<any> {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n        return this.http.post(this.apiManager.getPathByName('saveUser'),user,options)\n            .map(\n                (response : Response) => {\n                    return response.json().user;\n                }\n            );\n    }\n\n    deleteRoles(roles : Role[]) : Observable<any>\n    {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n        return this.http.put(this.apiManager.getPathByName('getRoles'),roles,options)\n            .map(\n                (response : Response) => {\n                    return response.json().roles;\n                }\n            );\n    }\n\n    deleteUsers (users : User[]) : Observable<any>\n    {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n        return this.http.put(this.apiManager.getPathByName('getUsers'),users,options)\n            .map(\n                (response : Response) => {\n                    return response.json().roles;\n                }\n            );\n    }\n\n    updateListOfRoles()\n    {\n        this._updateRoles.next();\n    }\n\n    updateListOfUsers()\n    {\n        this._updateUsers.next();\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/Services/settings.service.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"role.name\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-list\\\"></i>\\n                <span>Permissions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\">\\n                    <i class=\\\"fa fa-plus\\\"></i>\\n                    Add\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"role.permissions.length > 0\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let permission of role.permissions\\\">\\n                                        <td>\\n                                            {{permission.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"td_orange\\\" (click)=\\\"erasePermission(permission)\\\" *ngIf=\\\"isEdit == true\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n    <div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <div class=\\\"modal-title\\\">\\n                        Searching For Permission\\n                        <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label class=\\\"col-md-4\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                        <ul>\\n                                            <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                                <a (click)=\\\"addPermissions(item)\\\">{{item.name}}</a>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <div class=\\\"m-footer\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/NewRole/rolenew.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/NewRole/rolenew.component.html\n// module chunks = settings.module","\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Permission, Role} from \"../../Services/settings.interfaces\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector : 'settings-new-role',\n    templateUrl : './rolenew.component.html',\n    styles : ['']\n})\n\nexport class RoleNewComponent implements OnInit\n{\n    role : Role;\n    copyRole : Role;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    listPermissions = [];\n    filteredList : Permission[];\n    query : string;\n\n    constructor(private sService : SettingsService, private router : Router){\n        this.isEdit = false;\n        this.filteredList = [];\n        this.query = '';\n\n        this.role = {\n            id: -1,\n            name : '',\n            state : false,\n            permissions : []\n        }\n    }\n    ngOnInit(){\n        this.retrivePermission();\n    }\n\n    private retrivePermission()\n    {\n        this.sService.getPermissionsFrom().subscribe(\n            (perms : Permission []) => {\n                this.listPermissions = perms;\n                this.role.permissions.forEach((item : Permission)=>{\n                    let index = -1;\n                    for(let i = 0; i<this.listPermissions.length; i++)\n                    {\n                        let m = this.listPermissions[i];\n\n                        if(m.id === item.id && m.name === item.name)\n                        {\n                            index = i;\n                            break;\n                        }\n                    }\n                    if(index > -1){\n                        this.listPermissions.splice(index,1);\n                    }\n                });\n            }\n        );\n        this.cloneRole();\n    }\n\n    /**\n     * This function filter permission for research\n     */\n    filter(){\n        if (this.query !== \"\") {\n            this.filteredList = this.listPermissions.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n    }\n\n    /**\n     * This function delete Permission from role.permissions\n     * @param item\n     */\n    erasePermission(item) {\n        // cancella il permesso\n        this.listPermissions.push(item);\n        let index = this.role.permissions.indexOf(item);\n\n        if(index > -1)\n        {\n            this.role.permissions.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This Function add Permission at the moment to role.permissions\n     * @param item\n     */\n    addPermissions(item : Permission) {\n        //aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.role.permissions.push(item);\n        let index = this.listPermissions.indexOf(item);\n\n        if(index > -1)\n        {\n            this.listPermissions.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This function go to save Mode\n     */\n    saveMode() {\n        //salva i cambiamenti\n\n        if(!this.isEqual(this.role,this.copyRole))\n        {\n            if(this.role.name.length == 0)\n            {\n                alert('You must write a name of Role, please!');\n                this.cloneCopyRole();\n                return;\n            }\n\n            this.sService.newRole(this.role).subscribe(\n                (data : any) => {\n                    if(!data.hasOwnProperty('state'))\n                    {\n                        data.state = false;\n                    }\n                    //push the item into roles\n                        this.sService.setRole(data);\n                        this.sService.updateListOfRoles();\n                    //navigate to Settings Roles\n                        this.router.navigate(['/backend/settings/roles']);\n                }\n            );\n\n        }\n    }\n\n    isEqual(v,v2) : boolean\n    {\n        return (v.name == v2.name) && (v.state == v2.state) && (v.permissions.length == v2.permissions.length)\n    }\n\n    /**\n     * This function clone the Role\n     */\n    cloneRole(){\n        let permissions: Permission[] = [];\n\n        for(let perm of this.role.permissions)\n        {\n            permissions.push(perm);\n        }\n\n        this.copyRole = Object.assign({},this.role);\n        this.copyRole.permissions = permissions;\n    }\n\n    /**\n     * This function clone the CopyRole\n     */\n    cloneCopyRole()\n    {\n        let permissions: Permission[] = [];\n\n        for(let perm of this.copyRole.permissions)\n        {\n            permissions.push(perm);\n        }\n\n        this.role = Object.assign({},this.copyRole);\n        this.role.permissions = permissions;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/NewRole/rolenew.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"user.name\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Email</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" id=\\\"email\\\" [(ngModel)] = \\\"user.email\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Password</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" [(ngModel)] = \\\"user.password\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-list\\\"></i>\\n                <span>Role</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\">\\n                    <i class=\\\"fa fa-plus\\\"></i>\\n                    Add\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"user.role !== undefined\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr>\\n                                        <td>\\n                                            {{user.role.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"td_orange\\\" (click)=\\\"eraseRole(user.role)\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n    <div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <div class=\\\"modal-title\\\">\\n                        Searching For Permission\\n                        <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label class=\\\"col-md-4\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                        <ul>\\n                                            <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                                <a (click)=\\\"addRole(item)\\\">{{item.name}}</a>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <div class=\\\"m-footer\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/NewUser/usernew.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/NewUser/usernew.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 09/11/2017.\n */\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Permission, Role, User} from \"../../Services/settings.interfaces\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector : 'settings-new-user',\n    templateUrl : './usernew.component.html',\n    styles : ['']\n})\n\nexport class UserNewComponent implements OnInit\n{\n    user : User;\n    copyUser : User;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    listRole = [];\n    filteredList : Role[];\n    query : string;\n\n    constructor(private nService : SettingsService, private router : Router){\n        this.filteredList = [];\n        this.query = '';\n\n        this.user = {\n            id: -1,\n            name : '',\n            state : false,\n            email : ''\n        }\n    }\n    ngOnInit(){\n        this.retriveRoles();\n    }\n\n    private retriveRoles()\n    {\n        this.nService.getRolesFrom().subscribe(\n            (roles : Role []) => {\n                this.listRole = roles;\n            }\n        );\n        this.cloneUser();\n    }\n\n    /**\n     * This function filter permission for research\n     */\n    filter(){\n        if (this.query !== \"\") {\n            this.filteredList = this.listRole.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n    }\n\n    /**\n     * This function delete Permission from role.permissions\n     * @param item\n     */\n    eraseRole(item) {\n        // cancella il permesso\n        this.listRole.push(item);\n        delete this.user.role;\n    }\n\n    /**\n     * This Function add Permission at the moment to role.permissions\n     * @param item\n     */\n    addRole(item : Role) {\n        //aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.user.role = item;\n        let index = this.listRole.indexOf(item);\n\n        if(index > -1)\n        {\n            this.listRole.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This function go to save Mode\n     */\n    saveMode() {\n        //salva i cambiamenti\n\n        if(!this.isEqual(this.user,this.copyUser))\n        {\n            if(this.user.email.length == 0)\n            {\n                alert('You must write a name of Role, please!');\n                this.cloneCopyUser();\n                return;\n            }\n\n            this.nService.newUser(this.user).subscribe(\n                (data : any) => {\n                    if(!data.hasOwnProperty('state'))\n                    {\n                        data.state = false;\n                    }\n                    //push the item into roles\n                    this.nService.setUser(data);\n                    this.nService.updateListOfUsers();\n                    //navigate to Settings Roles\n                    this.router.navigate(['/backend/settings/users']);\n                }\n            );\n\n        }\n    }\n\n    isEqual(v,v2) : boolean\n    {\n        console.log(v);\n        console.log(v2);\n        return (v.email == v2.email) && (v.state == v2.state) && (v.name == v2.name)\n    }\n\n    /**\n     * This function clone the User\n     */\n    cloneUser(){\n        console.log(this.copyUser);\n        let permissions: Permission[] = [];\n\n        this.copyUser = Object.assign({}, this.user);\n        if(this.user.role !== undefined) {\n            for (let perm of this.user.role.permissions) {\n                permissions.push(perm);\n            }\n\n            let role: Role;\n\n            role = Object.assign({}, this.user.role);\n            this.copyUser.role = role;\n            this.copyUser.role.permissions = permissions;\n        }\n        console.log(this.copyUser);\n    }\n\n    /**\n     * This function clone the CopyUser\n     */\n    cloneCopyUser()\n    {\n        let permissions: Permission[] = [];\n\n        for(let perm of this.copyUser.role.permissions)\n        {\n            permissions.push(perm);\n        }\n\n        let role : Role;\n\n        role = Object.assign({},this.copyUser.role);\n\n        this.user = Object.assign({},this.copyUser);\n        this.user.role = role;\n        this.user.role.permissions = permissions;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/NewUser/usernew.component.ts","module.exports = \"<form class=\\\"form\\\" *ngIf=\\\"notFound == true\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn darkorange\\\" (click)=\\\"editMode()\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                    Edit\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" [ngModel] = \\\"role.name\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" *ngIf=\\\"isEdit === false; else editName\\\" readonly>\\n                                    <ng-template #editName>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"role.name\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-list\\\"></i>\\n                <span>Permissions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\" *ngIf=\\\"isEdit == true\\\">\\n                    <i class=\\\"fa fa-plus\\\"></i>\\n                    Add\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let permission of role.permissions\\\">\\n                                        <td>\\n                                            {{permission.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"td_orange\\\" (click)=\\\"erasePermission(permission)\\\" *ngIf=\\\"isEdit == true\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n    <div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <div class=\\\"modal-title\\\">\\n                        Searching For Permission \\n                        <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label class=\\\"col-md-4\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                        <ul>\\n                                            <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                                <a (click)=\\\"addPermissions(item)\\\">{{item.name}}</a>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <div class=\\\"m-footer\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Role/role.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/Role/role.component.html\n// module chunks = settings.module","\n\nimport {Component, OnInit, Input, OnDestroy} from \"@angular/core\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Permission, Role} from \"../../Services/settings.interfaces\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {element} from \"protractor\";\n\n@Component({\n    selector : 'app-role',\n    templateUrl : './role.component.html',\n    styles : ['']\n})\n\nexport class RoleComponent implements OnInit,OnDestroy\n{\n    @Input() role : Role;\n    copyRole : Role;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    listPermissions = [];\n    filteredList : Permission[];\n    query : string;\n    notFound : boolean;\n\n    constructor(private sService : SettingsService, private router : ActivatedRoute,private nav : Router){\n        this.isEdit = false;\n        this.notFound = false;\n        this.filteredList = [];\n        this.query = '';\n        this.role = {\n            id : -2,\n            name : '',\n            state : false,\n            permissions : []\n        };\n        this.sub = this.router.params.subscribe(\n            (params) => {\n                this.id = +params['id'];\n                this.role = this.sService.getRoleByProperty('id',this.id);\n                if(this.role != null)\n                {\n                    this.notFound = true;\n                }\n                else\n                {\n                    this.nav.navigate(['/backend/not-found']);\n                }\n                this.copyRole = Object.assign({},this.role);\n            }\n        );\n    }\n\n    ngOnInit(){\n        this.retrivePermission();\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    /**\n     * This function pass into edit Mode\n     */\n    editMode(){\n        //passa in modalità edit\n        this.isEdit = !this.isEdit;\n    }\n\n    /**\n     * This function go to save Mode\n     */\n    saveMode() {\n        //salva i cambiamenti\n        if(this.role !== this.copyRole)\n        {\n            if(this.role.name.length == 0)\n            {\n                alert('You must write a name of Role, please!');\n                this.cloneCopyRole();\n                return;\n            }\n\n            this.sService.saveRole(this.role).subscribe(\n                (role : Role) => {\n                    this.role = role;\n                    this.retrivePermission();\n                    this.editMode();\n                }\n            );\n        }\n    }\n\n    /**\n     * This function is to get Permission from API\n     */\n    private retrivePermission()\n    {\n        this.sService.getPermissionsFrom().subscribe(\n            (perms : Permission []) => {\n                this.listPermissions = perms;\n                if(this.role != null) {\n                    this.role.permissions.forEach((item: Permission) => {\n                        let index = -1;\n                        for (let i = 0; i < this.listPermissions.length; i++) {\n                            let m = this.listPermissions[i];\n\n                            if (m.id === item.id && m.name === item.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        if (index > -1) {\n                            this.listPermissions.splice(index, 1);\n                        }\n                    });\n                }\n            }\n        );\n        this.cloneRole();\n    }\n\n    /**\n     * This function reset the Information of Role\n     */\n    resetMode() {\n\n        if(this.role !== this.copyRole) {\n            if (confirm('Are you sure you don\\'t want to save this changement and restore it?')) {\n                this.cloneCopyRole();\n            }\n        }\n    }\n\n    /**\n     * This Function add Permission at the moment to role.permissions\n     * @param item\n     */\n    addPermissions(item : Permission) {\n        //aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.role.permissions.push(item);\n        let index = this.listPermissions.indexOf(item);\n\n        if(index > -1)\n        {\n            this.listPermissions.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This function delete Permission from role.permissions\n     * @param item\n     */\n    erasePermission(item) {\n        // cancella il permesso\n        this.listPermissions.push(item);\n        let index = this.role.permissions.indexOf(item);\n\n        if(index > -1)\n        {\n            this.role.permissions.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This function filter permission for research\n     */\n    filter(){\n        if (this.query !== \"\") {\n            this.filteredList = this.listPermissions.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n        else {\n\n        }\n    }\n\n    /**\n     * This function clone the Role\n     */\n    cloneRole(){\n        if(this.role != null) {\n            let permissions: Permission[] = [];\n\n            for (let perm of this.role.permissions) {\n                permissions.push(perm);\n            }\n\n            this.copyRole = Object.assign({}, this.role);\n            this.copyRole.permissions = permissions;\n        }\n    }\n\n    /**\n     * This function clone the CopyRole\n     */\n    cloneCopyRole()\n    {\n        let permissions: Permission[] = [];\n\n        for(let perm of this.copyRole.permissions)\n        {\n            permissions.push(perm);\n        }\n\n        this.role = Object.assign({},this.copyRole);\n        this.role.permissions = permissions;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Role/role.component.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"active\\\">\\n            <a href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Roles</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/settings/users']\\\" data-toggle=\\\"tab\\\"> Users</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                                <div class=\\\"dataTables_length\\\">\\n                                    <label>\\n                                        Show\\n                                        <select class=\\\"form-control input-sm\\\" name=\\\"example_length\\\">\\n                                            <option value=\\\"10\\\">10</option>\\n                                        </select>\\n                                        entries\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/settings/roles/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteRoles()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let role of listaRole\\\">\\n                                            <td>\\n                                                <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,role)\\\" [(ngModel)] = \\\"role.state\\\">\\n                                            </td>\\n                                            <td>\\n                                                {{role.name}}\\n                                            </td>\\n                                            <td>\\n                                                <a [routerLink] = \\\"['/backend/settings/roles',role.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-5\\\">\\n                                <div class=\\\"dataTables_info\\\">Showing 1 to 10 of 57 entries</div>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <div class=\\\"dataTables_paginate\\\">\\n                                    <ul class=\\\"pagination\\\">\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\"><span aria-hidden=\\\"true\\\">«</span></a>\\n                                        </li>\\n                                        <li class=\\\"page-item active\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n                                        </li>\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\">2</a>\\n                                        </li>\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\"><span aria-hidden=\\\"true\\\">»</span></a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Roles/roles.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/Roles/roles.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 30/10/2017.\n */\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Role} from \"../../Services/settings.interfaces\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {hasOwnProperty} from \"tslint/lib/utils\";\n\n@Component({\n    selector : 'app-roles-component',\n    templateUrl : './roles.component.html',\n    styles : ['']\n})\n\nexport class RolesComponent implements OnInit\n{\n    listaRole : Role[];\n    myRoot = '/backend/settings/roles';\n    isRoot = false;\n\n    listaRoleDelete : Role[];\n\n    constructor(private c_Service : SettingsService, private router :Router) {\n\n        this.listaRoleDelete = [];\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n            this.retrieveListOfRoles();\n            this.c_Service.updateRoles$.subscribe(\n                () => {\n                    this.retrieveListOfRoles();\n                }\n            );\n\n    }\n\n    ngOnInit() {\n    }\n\n    retrieveListOfRoles() : void\n    {\n        if(!this.c_Service.checkRolesExist())\n        {\n            this.c_Service.getRolesFrom().subscribe(\n                (roles: Role[]) => {\n\n                    this.listaRole = roles;\n                    this.listaRole.forEach((role : Role) => {\n                        role.state = false;\n                    });\n                    this.c_Service.setRoles(this.listaRole);\n                }\n            );\n        }\n        else {\n            this.listaRole = this.c_Service.getRoles();\n            this.listaRole.forEach((item : any) => {\n                if(!item.hasOwnProperty('state'))\n                {\n                    item.state = false;\n                }\n            });\n        }\n    }\n\n    /**\n     * function to push or splice item into Deleted List of Roles\n     * @param ev\n     * @param data\n     */\n    eventChange(ev,data : Role) : void\n    {\n        if(ev.target.checked)\n        {\n            this.listaRoleDelete.push(data);\n        }\n        else\n        {\n            let index = this.listaRoleDelete.indexOf(data);\n\n            if(index > -1)\n            {\n                this.listaRoleDelete.splice(index,1);\n            }\n        }\n    }\n\n    deleteRoles()\n    {\n        if(this.listaRoleDelete.length > 0)\n        {\n            if(confirm('Do you really want delete this Roles?'))\n            {\n                this.c_Service.deleteRoles(this.listaRoleDelete).subscribe(\n                    (data : any) => {\n                        this.listaRoleDelete = [];\n                        this.listaRole = data;\n                        this.c_Service.setRoles(this.listaRole);\n                    }\n                );\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Roles/roles.component.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li>\\n            <a [routerLink]=\\\"['/backend/settings/roles']\\\" data-toggle=\\\"tab\\\"> Roles</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <a  href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Users</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                                <div class=\\\"dataTables_length\\\">\\n                                    <label>\\n                                        Show\\n                                        <select class=\\\"form-control input-sm\\\" name=\\\"example_length\\\">\\n                                            <option value=\\\"10\\\">10</option>\\n                                        </select>\\n                                        entries\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/settings/users/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteUsers()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th>\\n                                            <a>Email</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let user of listaUser\\\">\\n                                        <td>\\n                                            <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,user)\\\" [(ngModel)] = \\\"user.state\\\">\\n                                        </td>\\n                                        <td>\\n                                            {{user.name}}\\n                                        </td>\\n                                        <td>\\n                                            {{user.email}}\\n                                        </td>\\n                                        <td>\\n                                            <a [routerLink] = \\\"['/backend/settings/users',user.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-5\\\">\\n                                <div class=\\\"dataTables_info\\\">Showing 1 to 10 of 57 entries</div>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <div class=\\\"dataTables_paginate\\\">\\n                                    <ul class=\\\"pagination\\\">\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\"><span aria-hidden=\\\"true\\\">«</span></a>\\n                                        </li>\\n                                        <li class=\\\"page-item active\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n                                        </li>\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\">2</a>\\n                                        </li>\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\"><span aria-hidden=\\\"true\\\">»</span></a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Users/users.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/Users/users.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 09/11/2017.\n */\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Role,User} from \"../../Services/settings.interfaces\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n    selector : 'settings-users',\n    templateUrl : './users.component.html',\n    styles : ['']\n})\n\nexport class UsersComponent implements OnInit\n{\n    listaUser : User[];\n    myRoot = '/backend/settings/users';\n    isRoot = false;\n\n    listaUserDelete : User[];\n\n    constructor(private s_Service : SettingsService, private router : Router) {\n\n        this.listaUserDelete = [];\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n        this.retrieveListOfUsers();\n        this.s_Service.updateUsers$.subscribe(\n            () => {\n                this.retrieveListOfUsers();\n            }\n        );\n\n    }\n\n    ngOnInit() {\n    }\n\n    retrieveListOfUsers() : void\n    {\n        if(!this.s_Service.checkUsersExist())\n        {\n            this.s_Service.getUsersFrom().subscribe(\n                (users: User[]) => {\n\n                    this.listaUser = users;\n                    this.listaUser.forEach((user : User) => {\n                        user.state = false;\n                    });\n                    this.s_Service.setUsers(this.listaUser);\n                }\n            );\n        }\n        else {\n            this.listaUser = this.s_Service.getUsers();\n            this.listaUser.forEach((item : any) => {\n                if(!item.hasOwnProperty('state'))\n                {\n                    item.state = false;\n                }\n            });\n        }\n    }\n\n    /**\n     * function to push or splice item into Deleted List of Roles\n     * @param ev\n     * @param data\n     */\n    eventChange(ev,data : User) : void\n    {\n        if(ev.target.checked)\n        {\n            this.listaUserDelete.push(data);\n        }\n        else\n        {\n            let index = this.listaUserDelete.indexOf(data);\n\n            if(index > -1)\n            {\n                this.listaUserDelete.splice(index,1);\n            }\n        }\n    }\n\n    deleteUsers()\n    {\n        if(this.listaUserDelete.length > 0)\n        {\n            if(confirm('Do you really want delete this Roles?'))\n            {\n                this.s_Service.deleteUsers(this.listaUserDelete).subscribe(\n                    (data : any) => {\n                        this.listaUserDelete = [];\n                        this.listaUser = data;\n                        this.s_Service.setUsers(this.listaUser);\n                    }\n                );\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Users/users.component.ts","\n\nexport {SettingsComponent} from \"./settings.component\";\nexport {RoleComponent} from \"./Role/role.component\";\nexport {RolesComponent} from \"./Roles/roles.component\";\nexport {RoleNewComponent} from \"./NewRole/rolenew.component\";\nexport {UsersComponent} from \"./Users/users.component\";\nexport {UserNewComponent} from \"./NewUser/usernew.component\";\n\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/index.ts","module.exports = \"<div class=\\\"content-box\\\">\\n    <div class=\\\"content-header\\\">\\n        <h1>Settings</h1>\\n        <breadcrumbs></breadcrumbs>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n        <div class=\\\"portlet\\\" *ngIf=\\\"isRoot === true\\\">\\n            <div class=\\\"portlet-title\\\">\\n                <div class=\\\"caption\\\">\\n                    <i class=\\\"fa fa-database\\\"></i>\\n                    <span>Overviews</span>\\n                </div>\\n                <div class=\\\"actions\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"portlet-body\\\">\\n                <div class=\\\"tiles\\\">\\n                    <a [routerLink]=\\\"['/backend/settings/users']\\\">\\n                        <div class=\\\"tile double bg-cyan\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-users fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Users\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <a [routerLink]=\\\"['/backend/settings/roles']\\\">\\n                        <div class=\\\"tile bg-orange\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                    <i class=\\\"fa fa-list fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Roles\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/settings.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/settings.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 17/10/2017.\n */\n\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {SettingsService} from \"../Services/settings.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n@Component({\n    selector:'app-settings',\n    templateUrl:'./settings.component.html'\n})\n\nexport class SettingsComponent implements OnInit\n{\n    isRoot : boolean;\n    myRoot = '/backend/settings';\n    constructor(private router : Router) {\n        this.isRoot = true;\n        //trigger the event for the overview\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                       this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n    }\n\n    ngOnInit() {\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/settings.component.ts","/**\n * Created by hernan on 17/10/2017.\n */\n\n\nimport {NgModule} from \"@angular/core\";\nimport {routing,routedComponents} from \"./settings.routing\";\nimport {SettingsService} from \"./Services/settings.service\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpModule} from \"@angular/http\";\nimport {BreadCrumbModule} from \"../../../app/backend-module/\";\n\n@NgModule({\n    imports:[\n        CommonModule,\n        FormsModule,\n        HttpModule,\n        routing,\n        BreadCrumbModule\n    ],\n    providers: [SettingsService],\n    declarations: [routedComponents]\n})\n\nexport class SettingsModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/settings.module.ts","\n/**\n * Created by hernan on 17/10/2017.\n */\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ModuleWithProviders} from \"@angular/core\";\nimport {RoleComponent,RoleNewComponent,RolesComponent,SettingsComponent,UsersComponent,UserNewComponent} from \"./component\";\n\nconst routes : Routes = [\n    {path: '' , component:SettingsComponent, data : { breadcrumb : 'Settings'} , children:[\n        {path: 'roles', component: RolesComponent, data : { breadcrumb : 'Roles'}, children: [\n            {path: 'new', component:RoleNewComponent, data : { breadcrumb : 'New Role'} },\n            {path: ':id', component:RoleComponent, data : {breadcrumb : 'Role'}},\n        ]},\n        {path: 'users', component:UsersComponent, data: {breadcrumb : 'Users'}, children: [\n            {path: 'new', component:UserNewComponent, data : { breadcrumb : 'New User'} },\n        ]}\n    ]}\n];\n\nexport const routing : ModuleWithProviders = RouterModule.forChild(routes);\n\nexport const routedComponents = [SettingsComponent,RolesComponent,RoleComponent,RoleNewComponent,UsersComponent, UserNewComponent];\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/settings.routing.ts"],"sourceRoot":"webpack:///"}