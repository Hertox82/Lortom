{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/Services/settings.service.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Role/role.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Role/role.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Roles/roles.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Roles/roles.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/settings.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/settings.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/settings.module.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/settings.routing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEyC;AAEG;AAC3B;AAC6C;AACzB;AAGrC,IAAa,eAAe;IAOxB,yBAAoB,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;QAHvB,QAAG,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,QAAG,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAI1B,wBAAwB;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,2EAAU,EAAE,CAAC;QACnC,kCAAkC;QACjC,IAAM,IAAI,GAAG;YACN,EAAE,QAAQ,EAAG,eAAe,EAAE,IAAI,EAAE,aAAa,EAAC;YAClD,EAAE,QAAQ,EAAG,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE;SAC/C,CAAC;QACF,+BAA+B;QAC/B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED;;;OAGG;IACH,sCAAY,GAAZ;QAEI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;aAC1D,GAAG,CAAE,UAAC,QAAmB;YACtB,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;QACjC,CAAC,CAAC,CAAC;IAEX,CAAC;IAED;;;OAGG;IACH,4CAAkB,GAAlB;QAEI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;aAC/D,GAAG,CAAC,UAAC,QAAmB;YACrB,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;QACvC,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;;OAGG;IACH,kCAAQ,GAAR,UAAS,KAAc;QAEnB,cAAc,CAAC,OAAO,CAAC,OAAO,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACH,yCAAe,GAAf;QAEI,MAAM,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC;IACtD,CAAC;IAED;;;;;OAKG;IACH,2CAAiB,GAAjB,UAAkB,IAAa,EAAE,KAAW;QAExC,IAAI,QAAc,CAAC;QACnB,QAAQ,GAAG,IAAI,CAAC;QAEhB,EAAE,EAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAC5B,CAAC;YACG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,CAAC;QACD,IAAI,CAAC,WAAW,CAAC,OAAO,CACpB,UAAC,IAAW;YACR,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CACxB,CAAC;gBACG,QAAQ,GAAG,IAAI,CAAC;YACpB,CAAC;QACL,CAAC,CACJ,CAAC;QAEF,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IACH,2CAAiB,GAAjB,UAAkB,IAAU,EAAE,UAAmB;QAE7C,IAAI,QAAQ,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,WAAW,CAAC,OAAO,CACpB,UAAC,CAAc;YACZ,EAAE,EAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CACzB,CAAC;gBACG,QAAQ,GAAG,IAAI,CAAC;YACpB,CAAC;QACJ,CAAC,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED;;;OAGG;IACH,kCAAQ,GAAR;QACI,EAAE,EAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAC5B,CAAC;YACG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CACJ,CAAC;YACG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;IACL,CAAC;IAED,gCAAM,GAAN,UAAO,MAAM;QACT,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAEL,sBAAC;AAAD,CAAC;AAlIY,eAAe;IAD3B,yEAAU,EAAE;yDAQkB,2DAAI,oBAAJ,2DAAI;GAPtB,eAAe,CAkI3B;AAlI2B;;;;;;;;;ACV5B,moCAAmoC,osDAAosD,oUAAoU,iBAAiB,mrEAAmrE,WAAW,8f;;;;;;;;;;;;;;;;;;;;;;;ACExxK;AACF;AACI;AACrB;AAS/C,IAAa,aAAa;IAUtB,uBAAoB,QAA0B,EAAU,MAAuB;QAA/E,iBAUC;QAVmB,aAAQ,GAAR,QAAQ,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAiB;QAJ/E,oBAAe,GAAG,EAAE,CAAC;QAKjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CACnC,UAAC,MAAM;YACH,KAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAC,KAAI,CAAC,EAAE,CAAC,CAAC;QAC9D,CAAC,CACJ,CAAC;IACN,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAsBC;QArBG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,SAAS,CACxC,UAAC,KAAqB;YAClB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,IAAiB;gBAC5C,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;gBACf,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EACjD,CAAC;oBACG,IAAI,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBAEhC,EAAE,EAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAC5C,CAAC;wBACG,KAAK,GAAG,CAAC,CAAC;wBACV,KAAK,CAAC;oBACV,CAAC;gBACL,CAAC;gBACD,EAAE,EAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAC;oBACX,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;gBACzC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CACJ,CAAC;IACN,CAAC;IAED,mCAAW,GAAX;QACI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAED,gCAAQ,GAAR;QACI,wBAAwB;QACxB,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/B,CAAC;IAED,gCAAQ,GAAR;QACI,qBAAqB;IACzB,CAAC;IAED,iCAAS,GAAT,cAAa,CAAC;IAEd,sCAAc,GAAd,UAAe,IAAiB;QAC5B,sBAAsB;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE/C,EAAE,EAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CACd,CAAC;YACG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QACzC,CAAC;IAEL,CAAC;IAED,uCAAe,GAAf,UAAgB,IAAI;QAChB,uBAAuB;QACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEhD,EAAE,EAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CACd,CAAC;YACG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;QAC1C,CAAC;IAEL,CAAC;IAED,8BAAM,GAAN;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAS,EAAE;gBACvD,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YACxE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,CAAC;QACD,IAAI,CAAC,CAAC;QAEN,CAAC;IACL,CAAC;IACL,oBAAC;AAAD,CAAC;AA/FY;IAAR,oEAAK,EAAE;kDAAQ,mEAAI,oBAAJ,mEAAI;2CAAC;AAFZ,aAAa;IANzB,wEAAS,CAAC;QACP,QAAQ,EAAG,UAAU;QACrB,8GAAqC;QACrC,MAAM,EAAG,CAAC,EAAE,CAAC;KAChB,CAAC;yDAYiC,mFAAe,oBAAf,mFAAe,sDAAmB,uEAAc,oBAAd,uEAAc;GAVtE,aAAa,CAiGzB;AAjGyB;;;;;;;;;ACd1B,whEAAwhE,gOAAgO,mfAAmf,WAAW,8PAA8P,iBAAiB,o2D;;;;;;;;;;;ACArgG;AAAA;;GAEG;;;;;;;;;;AAG6C;AACgB;AAEV;AAQtD,IAAa,cAAc;IAMvB,wBAAoB,SAA2B,EAAU,MAAc;QAAvE,iBA+BC;QA/BmB,cAAS,GAAT,SAAS,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHvE,WAAM,GAAG,yBAAyB,CAAC;QACnC,WAAM,GAAG,KAAK,CAAC;QAKX,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CACxB,UAAC,GAAG;YACA,EAAE,EAAC,GAAG,YAAY,sEAAa,CAAC,CAChC,CAAC;gBACG,EAAE,EAAC,KAAI,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAC3B,CAAC;oBACG,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACvB,CAAC;gBACD,IAAI,CACJ,CAAC;oBACG,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACxB,CAAC;YACL,CAAC;QACL,CAAC,CACJ,CAAC;QAEF,EAAE,EAAC,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CACrC,CAAC;YACG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,SAAS,CACnC,UAAC,KAAa;gBACV,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,CAAC,CACJ,CAAC;QACN,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC/C,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR;IAEA,CAAC;IAEL;AAAA;AA3Ca,cAAc;IAN1B,wEAAS,CAAC;QACP,QAAQ,EAAG,qBAAqB;QAChC,gHAAsC;QACtC,MAAM,EAAG,CAAC,EAAE,CAAC;KAChB,CAAC;yDAQkC,mFAAe,oBAAf,mFAAe,sDAAkB,+DAAM,oBAAN,+DAAM;GAN9D,cAAc,CA2C3B;AA3C2B;;;;;;;;;AChB3B,qyC;;;;;;;;;;;ACAA;AAAA;;GAEG;;;;;;;;;;AAI6C;AACa;AACP;AAMtD,IAAa,iBAAiB;IAI1B,2BAAoB,QAA0B,EAAU,MAAe;QAAvE,iBAwBC;QAxBmB,aAAQ,GAAR,QAAQ,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAS;QADvE,WAAM,GAAG,mBAAmB,CAAC;QAEzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,oCAAoC;QACpC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CACvB,UAAC,IAAc;YACX,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC,CACJ,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CACxB,UAAC,GAAG;YACA,EAAE,EAAC,GAAG,YAAY,sEAAa,CAAC,CAChC,CAAC;gBACG,EAAE,EAAC,KAAI,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAC3B,CAAC;oBACE,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACtB,CAAC;gBACD,IAAI,CACJ,CAAC;oBACG,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACxB,CAAC;YACL,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IAED,oCAAQ,GAAR;IAEA,CAAC;IACL;AAAA;AAjCa,iBAAiB;IAL7B,wEAAS,CAAC;QACP,QAAQ,EAAC,cAAc;QACvB,6GAAuC;KAC1C,CAAC;yDAMiC,mFAAe,oBAAf,mFAAe,sDAAmB,+DAAM,oBAAN,+DAAM;GAJ9D,iBAAiB,CAiC9B;AAjC8B;;;;;;;;;;;;;;;;;;ACd9B;AAAA;;GAEG;;;;;;;AAGoC;AACqB;AACA;AACf;AACF;AACF;AAEmD;AAc5F,IAAa,cAAc;IAA3B;IAA6B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAjB,cAAc;IAZ1B,uEAAQ,CAAC;QACN,OAAO,EAAC;YACJ,qEAAY;YACZ,mEAAW;YACX,iEAAU;YACV,kEAAO;YACP,4GAAgB;SACnB;QACD,SAAS,EAAE,CAAC,mFAAe,CAAC;QAC5B,YAAY,EAAE,CAAC,2EAAgB,CAAC;KACnC,CAAC;GAEW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;ACzB3B;AAAA;;GAEG;AACkD;AACY;AAEA;AACH;AAE9D,IAAM,MAAM,GAAY;IACpB,EAAC,IAAI,EAAE,EAAE,EAAG,SAAS,EAAC,wFAAiB,EAAE,IAAI,EAAG,EAAE,UAAU,EAAG,UAAU,EAAC,EAAG,QAAQ,EAAC;YAClF,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,wFAAc,EAAE,IAAI,EAAG,EAAE,UAAU,EAAG,OAAO,EAAC,EAAE,QAAQ,EAAE;oBACjF,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAC,qFAAa,EAAE,IAAI,EAAG,EAAC,UAAU,EAAG,MAAM,EAAC,EAAC;iBACvE,EAAC;SACL,EAAC;CACL,CAAC;AAEK,IAAM,OAAO,GAAyB,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAEpE,IAAM,gBAAgB,GAAG,CAAC,wFAAiB,EAAC,wFAAc,EAAC,qFAAa,CAAC,CAAC","file":"settings.module.chunk.js","sourcesContent":["\n\nimport {Injectable} from \"@angular/core\";\nimport {Role,Permission} from \"./settings.interfaces\";\nimport {Http,Response} from \"@angular/http\";\nimport 'rxjs/Rx';\nimport {ApiManager} from \"../../../../app/urlApi/api.manager\";\nimport {Subject} from \"rxjs/Subject\";\n\n@Injectable()\nexport class SettingsService {\n\n    apiManager : ApiManager;\n    listOfRoles : Role[];\n    private _oC = new Subject();\n    oc$ = this._oC.asObservable();\n\n    constructor(private http : Http)\n    {\n        // create the ApiManager\n        this.apiManager = new ApiManager();\n        // write the api route for setting\n         const urls = [\n                { namePath : 'getPermission', path: 'permissions'},\n                { namePath : 'getRoles', path: 'roles' }\n        ];\n        //Add the Api to the ApiManager\n        this.apiManager.addListUrlApi(urls);\n    }\n\n    /**\n     * This function retrive the roles from the API (Laravel)\n     * @returns {Observable<R>}\n     */\n    getRolesFrom()\n    {\n        return this.http.get(this.apiManager.getPathByName('getRoles'))\n            .map( (response : Response) => {\n                return response.json().roles;\n            });\n\n    }\n\n    /**\n     * This function retrive the permissions from the API (Laravel)\n     * @returns {Observable<R>}\n     */\n    getPermissionsFrom()\n    {\n        return this.http.get(this.apiManager.getPathByName('getPermission'))\n            .map((response : Response) =>  {\n                return response.json().permissions;\n            });\n    }\n\n    /**\n     * This function set the Roles\n     * @param roles\n     */\n    setRoles(roles : Role[])\n    {\n        sessionStorage.setItem('roles',JSON.stringify(roles));\n        this.listOfRoles = roles;\n    }\n\n    /**\n     * This function check if Dataset of Roles exist\n     * @returns {boolean}\n     */\n    checkRolesExist()\n    {\n        return (sessionStorage.getItem('roles') !== null);\n    }\n\n    /**\n     * This function return Role passing a property\n     * @param name\n     * @param value\n     * @returns {Role}\n     */\n    getRoleByProperty(name : string, value : any)\n    {\n        let response: Role;\n        response = null;\n\n        if(this.listOfRoles == null)\n        {\n            this.listOfRoles = JSON.parse(sessionStorage.getItem('roles'));\n        }\n        this.listOfRoles.forEach(\n            (role : Role) => {\n                if(role[name] === value)\n                {\n                    response = role;\n                }\n            }\n        );\n\n        return response;\n    }\n\n    /**\n     * This function check if a role has permission\n     * @param role\n     * @param permission\n     * @returns {boolean}\n     */\n    roleHasPermission(role: Role, permission : string)\n    {\n        let response = false;\n\n        role.permissions.forEach(\n            (p : Permission) => {\n               if(p.name === permission)\n               {\n                   response = true;\n               }\n            });\n        return response;\n    }\n\n    /**\n     * This function get The Roles\n     * @returns {any}\n     */\n    getRoles(){\n        if(this.listOfRoles == null)\n        {\n            return JSON.parse(sessionStorage.getItem('roles'));\n        }\n        else\n        {\n            return this.listOfRoles;\n        }\n    }\n\n    emitOc(object){\n        this._oC.next(object);\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/Services/settings.service.ts","module.exports = \"\\n<h3>Roles</h3>\\n\\n<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn darkorange\\\" (click)=\\\"editMode()\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                    Edit\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" [ngModel] = \\\"role.name\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" *ngIf=\\\"isEdit === false; else editName\\\" readonly>\\n                                    <ng-template #editName>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"role.name\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-list\\\"></i>\\n                <span>Permissions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\" *ngIf=\\\"isEdit == true\\\">\\n                    <i class=\\\"fa fa-plus\\\"></i>\\n                    Add\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let permission of role.permissions\\\">\\n                                        <td>\\n                                            {{permission.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"td_orange\\\" (click)=\\\"erasePermission(permission)\\\" *ngIf=\\\"isEdit == true\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n    <div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <div class=\\\"modal-title\\\">\\n                        Searching For Permission \\n                        <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label class=\\\"col-md-4\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\">\\n                                    <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                        <ul>\\n                                            <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                                <a (click)=\\\"addPermissions(item)\\\">{{item.name}}</a>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <div class=\\\"m-footer\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Role/role.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/Role/role.component.html\n// module chunks = settings.module","\n\nimport {Component, OnInit, Input, OnDestroy} from \"@angular/core\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Permission, Role} from \"../../Services/settings.interfaces\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {element} from \"protractor\";\n\n@Component({\n    selector : 'app-role',\n    templateUrl : './role.component.html',\n    styles : ['']\n})\n\nexport class RoleComponent implements OnInit,OnDestroy\n{\n    @Input() role : Role;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    listPermissions = [];\n    filteredList : Permission[];\n    query : string;\n\n    constructor(private sService : SettingsService, private router : ActivatedRoute){\n        this.isEdit = false;\n        this.filteredList = [];\n        this.query = '';\n        this.sub = this.router.params.subscribe(\n            (params) => {\n                this.id = +params['id'];\n                this.role = this.sService.getRoleByProperty('id',this.id);\n            }\n        );\n    }\n\n    ngOnInit(){\n        this.sService.getPermissionsFrom().subscribe(\n            (perms : Permission []) => {\n                this.listPermissions = perms;\n                this.role.permissions.forEach((item : Permission)=>{\n                    let index = -1;\n                    for(let i = 0; i<this.listPermissions.length; i++)\n                    {\n                        let m = this.listPermissions[i];\n\n                        if(m.id === item.id && m.name === item.name)\n                        {\n                            index = i;\n                            break;\n                        }\n                    }\n                    if(index > -1){\n                        this.listPermissions.splice(index,1);\n                    }\n                });\n            }\n        );\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    editMode(){\n        //passa in modalità edit\n        this.isEdit = !this.isEdit;\n    }\n\n    saveMode() {\n        //salva i cambiamenti\n    }\n\n    resetMode() {}\n\n    addPermissions(item : Permission) {\n        //aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.role.permissions.push(item);\n        let index = this.listPermissions.indexOf(item);\n\n        if(index > -1)\n        {\n            this.listPermissions.splice(index,1);\n        }\n\n    }\n\n    erasePermission(item) {\n        // cancella il permesso\n        this.listPermissions.push(item);\n        let index = this.role.permissions.indexOf(item);\n\n        if(index > -1)\n        {\n            this.role.permissions.splice(index,1);\n        }\n\n    }\n\n    filter(){\n        if (this.query !== \"\") {\n            this.filteredList = this.listPermissions.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n        else {\n\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Role/role.component.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"active\\\">\\n            <a href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Roles</a>\\n        </li>\\n        <li>\\n            <a href=\\\"#tab_2\\\" data-toggle=\\\"tab\\\"> Permissions</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-10\\\">\\n                                <div class=\\\"dataTables_length\\\">\\n                                    <label>\\n                                        Show\\n                                        <select class=\\\"form-control input-sm\\\" name=\\\"example_length\\\">\\n                                            <option value=\\\"10\\\">10</option>\\n                                        </select>\\n                                        entries\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-2\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let role of listaRole\\\">\\n                                            <td>\\n                                                <input type=\\\"checkbox\\\">\\n                                            </td>\\n                                            <td>\\n                                                {{role.name}}\\n                                            </td>\\n                                            <td>\\n                                                <a [routerLink] = \\\"['/backend/settings/roles',role.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-5\\\">\\n                                <div class=\\\"dataTables_info\\\">Showing 1 to 10 of 57 entries</div>\\n                            </div>\\n                            <div class=\\\"col-sm-7\\\">\\n                                <div class=\\\"dataTables_paginate\\\">\\n                                    <ul class=\\\"pagination\\\">\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\"><span aria-hidden=\\\"true\\\">«</span></a>\\n                                        </li>\\n                                        <li class=\\\"page-item active\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n                                        </li>\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\">2</a>\\n                                        </li>\\n                                        <li class=\\\"page-item\\\">\\n                                            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\"><span aria-hidden=\\\"true\\\">»</span></a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Roles/roles.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/Roles/roles.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 30/10/2017.\n */\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {SettingsService} from \"../../Services/settings.service\";\nimport {Role} from \"../../Services/settings.interfaces\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n    selector : 'app-roles-component',\n    templateUrl : './roles.component.html',\n    styles : ['']\n})\n\nexport class RolesComponent implements OnInit\n{\n    listaRole : Role[];\n    myRoot = '/backend/settings/roles';\n    isRoot = false;\n\n    constructor(private m_Service : SettingsService, private router :Router) {\n\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n\n        if(!this.m_Service.checkRolesExist())\n        {\n            this.m_Service.getRolesFrom().subscribe(\n                (roles: Role[]) => {\n                    this.listaRole = roles;\n                    this.m_Service.setRoles(this.listaRole);\n                }\n            );\n        }\n        else {\n            this.listaRole = this.m_Service.getRoles();\n        }\n    }\n\n    ngOnInit() {\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/Roles/roles.component.ts","module.exports = \"<div class=\\\"content-box\\\">\\n    <div class=\\\"content-header\\\">\\n        <h1>Settings</h1>\\n        <breadcrumbs></breadcrumbs>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n        <div class=\\\"portlet\\\" *ngIf=\\\"isRoot === true\\\">\\n            <div class=\\\"portlet-title\\\">\\n                <div class=\\\"caption\\\">\\n                    <i class=\\\"fa fa-database\\\"></i>\\n                    <span>Overviews</span>\\n                </div>\\n                <div class=\\\"actions\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"portlet-body\\\">\\n                <div class=\\\"tiles\\\">\\n                    <a [routerLink]=\\\"['/backend/settings/roles']\\\">\\n                        <div class=\\\"tile bg-orange\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                    <i class=\\\"fa fa-list fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Roles\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/settings.component.html\n// module id = ../../../../../src/plugins/Hardel/Settings/component/settings.component.html\n// module chunks = settings.module","/**\n * Created by hernan on 17/10/2017.\n */\n\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {SettingsService} from \"../Services/settings.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n@Component({\n    selector:'app-settings',\n    templateUrl:'./settings.component.html'\n})\n\nexport class SettingsComponent implements OnInit\n{\n    isRoot : boolean;\n    myRoot = '/backend/settings';\n    constructor(private eService : SettingsService, private router : Router) {\n        this.isRoot = true;\n        //trigger the event for the overview\n        this.eService.oc$.subscribe(\n            (data : boolean) => {\n                this.isRoot = data;\n            }\n        );\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                       this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n    }\n\n    ngOnInit() {\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/component/settings.component.ts","/**\n * Created by hernan on 17/10/2017.\n */\n\n\nimport {NgModule} from \"@angular/core\";\nimport {routing,routedComponents} from \"./settings.routing\";\nimport {SettingsService} from \"./Services/settings.service\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpModule} from \"@angular/http\";\nimport {BreadCrumbsComponent} from \"../../../app/backend-module/breadcrumbs/breadcrumbs.component\";\nimport {BreadCrumbModule} from \"../../../app/backend-module/breadcrumbs/breadcrumbs.module\";\n\n@NgModule({\n    imports:[\n        CommonModule,\n        FormsModule,\n        HttpModule,\n        routing,\n        BreadCrumbModule\n    ],\n    providers: [SettingsService],\n    declarations: [routedComponents]\n})\n\nexport class SettingsModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/settings.module.ts","\n/**\n * Created by hernan on 17/10/2017.\n */\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./component/settings.component\";\nimport {ModuleWithProviders} from \"@angular/core\";\nimport {RolesComponent} from \"./component/Roles/roles.component\";\nimport {RoleComponent} from \"./component/Role/role.component\";\n\nconst routes : Routes = [\n    {path: '' , component:SettingsComponent, data : { breadcrumb : 'Settings'} , children:[\n        {path: 'roles', component: RolesComponent, data : { breadcrumb : 'Roles'}, children: [\n            {path: ':id', component:RoleComponent, data : {breadcrumb : 'Role'}}\n        ]},\n    ]}\n];\n\nexport const routing : ModuleWithProviders = RouterModule.forChild(routes);\n\nexport const routedComponents = [SettingsComponent,RolesComponent,RoleComponent];\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Settings/settings.routing.ts"],"sourceRoot":"webpack:///"}