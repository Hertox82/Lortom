{"version":3,"sources":["./src/plugins/Hardel/Website/Services/website.interfaces.ts","./src/plugins/Hardel/Website/Services/website.service.ts","./src/plugins/Hardel/Website/component/Components/components.component.html","./src/plugins/Hardel/Website/component/Components/components.component.ts","./src/plugins/Hardel/Website/component/Element/element.component.html","./src/plugins/Hardel/Website/component/Element/element.component.ts","./src/plugins/Hardel/Website/component/Elements/elements.component.html","./src/plugins/Hardel/Website/component/Elements/elements.component.ts","./src/plugins/Hardel/Website/component/NewComponent/componentnew.component.html","./src/plugins/Hardel/Website/component/NewComponent/componentnew.component.ts","./src/plugins/Hardel/Website/component/NewElement/elementnew.component.html","./src/plugins/Hardel/Website/component/NewElement/elementnew.component.ts","./src/plugins/Hardel/Website/component/NewPage/pagenew.component.html","./src/plugins/Hardel/Website/component/NewPage/pagenew.component.ts","./src/plugins/Hardel/Website/component/Page/page.component.html","./src/plugins/Hardel/Website/component/Page/page.component.ts","./src/plugins/Hardel/Website/component/Pages/pages.component.html","./src/plugins/Hardel/Website/component/Pages/pages.component.ts","./src/plugins/Hardel/Website/component/index.ts","./src/plugins/Hardel/Website/component/website.component.html","./src/plugins/Hardel/Website/component/website.component.ts","./src/plugins/Hardel/Website/website.module.ts","./src/plugins/Hardel/Website/website.routing.ts"],"names":[],"mappings":"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","file":"website.module.chunk.js","sourcesContent":["/**\n * Created by hernan on 14/11/2017.\n */\n\n\nexport interface Page {\n    id : number,\n    title : string,\n    slug : string,\n    content : string,\n    metaTag : string,\n    metaDesc : string,\n    fileName : string,\n    check : boolean,\n    state : { id? : number , label? : string },\n}\n\n\nexport interface LortomElement {\n    id : number,\n    name : string,\n    Object : string,\n    functions : string,\n    appearance : string,\n    check : boolean\n}\n\n\nexport interface LortomComponent {\n    id : number,\n    name : string,\n    appearance : string,\n    elements : LortomElement [],\n    check : boolean\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/Services/website.interfaces.ts","/**\n * Created by hernan on 14/11/2017.\n */\n\n\nimport {Injectable} from \"@angular/core\";\nimport {ApiManager} from \"../../../../app/urlApi/api.manager\";\nimport {Headers, Http, RequestOptions, Response} from \"@angular/http\";\nimport {User} from \"../../../../app/backend-module/user-module/user-model/user.interface\";\nimport {Subject} from \"rxjs/Subject\";\nimport {Observable} from \"rxjs/Observable\";\nimport {LortomComponent, LortomElement, Page} from \"./website.interfaces\";\nimport {MasterService} from \"@Lortom/services/master.service\";\n\n@Injectable()\nexport class WebsiteService extends MasterService{\n\n\n    listOfPages : Page[];\n    listOfElements : LortomElement[];\n    listOfComponents : LortomComponent[];\n\n    private _updatePages = new Subject();\n    updatePages$ = this._updatePages.asObservable();\n\n    private _updateElements = new Subject();\n    updateElements$ = this._updateElements.asObservable();\n\n    private _updateComponents = new Subject();\n    updateComponents$ = this._updateComponents.asObservable();\n\n    constructor(private http: Http)\n    {\n        super();\n\n        // write the api route for setting\n        const urls = [\n            { namePath : 'getPages', path: 'pages'},\n            { namePath : 'savePage', path: 'page'},\n            { namePath : 'getPageAtt', path: 'pages/attribute/list'},\n            { namePath : 'getElements', path: 'elements'},\n            { namePath : 'saveElement', path : 'element'},\n            { namePath : 'getComponents', path : 'components'},\n            { namePath : 'saveComponent', path : 'component'}\n        ];\n        //Add the Api to the ApiManager\n        this.apiManager.addListUrlApi(urls);\n    }\n\n    /**\n     * This function return Page by Property\n     * @param name\n     * @param value\n     * @returns {Page}\n     */\n    getPageByProperty(name : string, value : any)\n    {\n        return this.getItemByProperty(name,value,'pages','listOfPages') as Page;\n    }\n\n    /**\n     * This function return Element by Property\n     * @param name\n     * @param value\n     * @returns {LortomElement}\n     */\n\n    getElementByProperty(name : string, value : any)\n    {\n       return this.getItemByProperty(name,value,'elements','listOfElements') as LortomElement;\n    }\n\n\n    /**\n     * This function update Element in listOfElements\n     * @param el\n     */\n    updateElementInList(el : LortomElement) : void\n    {\n        if(this.listOfElements == undefined)\n        {\n            this.listOfElements = this.getElements();\n        }\n        let elm = this.updateItemInList(el,this.listOfElements) as LortomElement[];\n\n        this.setElements(elm);\n    }\n\n\n    /**\n     * This function update Page in listOfPages\n     * @param page\n     */\n    updatePageInList(page : Page) : void\n    {\n        if(this.listOfPages == undefined)\n        {\n            this.listOfPages = this.getPages();\n        }\n       let p = this.updateItemInList(page,this.listOfPages) as Page[];\n        \n       this.setPages(p);\n    }\n\n\n    /**\n     * this function return if Pages Exists\n     * @returns {boolean}\n     */\n    checkPagesExist() : boolean\n    {\n        return this.checkItemExist('pages');\n    }\n\n    /**\n     * This function check if Elements exist\n     * @returns {boolean}\n     */\n    checkElementsExist() : boolean\n    {\n        return this.checkItemExist('elements');\n    }\n\n    /**\n     * This function check if Components exist\n     * @returns {boolean}\n     */\n    checkComponentsExist() : boolean\n    {\n        return this.checkItemExist('components');\n    }\n\n    /**\n     * This function Call API to get List Of Pages\n     * @returns {Observable<R>}\n     */\n    getPagesFrom() : Observable<any>\n    {\n        return this.http.get(this.apiManager.getPathByName('getPages'))\n            .map(\n                (response : Response) => {\n                    return response.json().pages;\n                }\n            );\n    }\n\n    /**\n     * This function call API to get Elements\n     * @returns {Observable<R>}\n     */\n    getElementsFrom() : Observable<any>\n    {\n        return this.http.get(this.apiManager.getPathByName('getElements'))\n            .map(\n                (response : Response) => {\n                    return response.json().elements;\n                }\n            );\n    }\n\n    getComponentsFrom() : Observable<any>\n    {\n        return this.http.get(this.apiManager.getPathByName('getComponents'))\n            .map(\n                (response : Response) => {\n                    return response.json().components;\n                }\n            );\n    }\n\n    /**\n     * This function set pages and store into a Session\n     * @param pages\n     */\n    setPages(pages : Page[]) : void\n    {\n        this.setItem('pages',pages);\n        this.listOfPages = pages;\n    }\n\n    /**\n     * This function set a list Of Elements\n     * @param elements\n     */\n    setElements(elements : LortomElement[]) : void\n    {\n        this.setItem('elements',elements);\n        this.listOfElements = elements;\n    }\n\n    setComponents(components : LortomComponent []) : void\n    {\n        this.setItem('components',components);\n        this.listOfComponents = components;\n    }\n\n    /**\n     * This function get listOfPages\n     * @returns {any}\n     */\n    getPages() : Page[]\n    {\n        return this.getItem('pages','listOfPages') as Page[];\n    }\n\n    /**\n     * This function return a list Of Elements\n     * @returns {LortomElement[]}\n     */\n    getElements() : LortomElement []\n    {\n        return this.getItem('elements','listOfElements') as LortomElement[];\n    }\n\n    getComponents() : LortomComponent []\n    {\n        return this.getItem('components','listOfComponents') as LortomComponent[];\n    }\n\n    /**\n     * This Function call API in order to Delete a list of Pages\n     * @param pages\n     * @returns {Observable<R>}\n     */\n    deletePages(pages : Page []) : Observable<any> {\n\n        return this.http.put(this.apiManager.getPathByName('getPages'),pages,this.getOptions())\n            .map(\n                (response : Response) => {\n                    return response.json().pages;\n                }\n            );\n    }\n\n    /**\n     * This function call API in order to Delete an Array of Element\n     * @param el\n     * @returns {Observable<R>}\n     */\n    deleteElements(el : LortomElement []) : Observable <any> {\n\n        return this.http.put(this.apiManager.getPathByName('getElements'),el,this.getOptions())\n            .map(\n                (response : Response) => {\n                    return response.json().elements;\n                }\n            );\n    }\n\n    deleteComponents(cmp : LortomComponent []) : Observable<any>\n    {\n        return this.http.put(this.apiManager.getPathByName('getComponents'),cmp,this.getOptions())\n            .map(\n                (response : Response) => {\n                    return response.json().components;\n                }\n            );\n    }\n\n    /**\n     *This function call API in order to create a Page.\n     * @param page\n     * @returns {Observable<R>}\n     */\n    createPage(page : Page) :Observable<any> {\n\n        return this.http.post(this.apiManager.getPathByName('savePage'),page,this.getOptions())\n            .map(\n                (response : Response) => {\n                    return response.json().page;\n                }\n            );\n    }\n\n    /**\n     * This function call API in order to Create an Element\n     * @param elem\n     * @returns {Observable<R>}\n     */\n    createElement(elem : LortomElement) : Observable<any> {\n\n        return this.http.post(this.apiManager.getPathByName('saveElement'),elem,this.getOptions())\n            .map(\n                (response : Response) => {\n                    return response.json().element;\n                }\n            );\n    }\n\n    createComponent(comp : LortomComponent) : Observable<any>{\n\n        return this.http.post(this.apiManager.getPathByName('saveComponent'),comp,this.getOptions())\n            .map(\n                (response: Response) => {\n                    return response.json().component;\n                }\n            )\n    }\n\n    /**\n     * This function set an Element into the listOfElements\n     * @param elem\n     */\n    setElement(elem : LortomElement) : void {\n\n        let el = this.getElements();\n        el.push(elem);\n        this.deleteElementFromCache();\n        this.setElements(el);\n    }\n\n    /**\n     * This function set a Page into the listOfPages\n     * @param page\n     */\n    setPage(page : Page) : void {\n\n        let pages = this.getPages();\n        pages.push(page);\n        this.deletePageFromCache();\n        this.setPages(pages);\n    }\n\n    /**\n     * This function set a Component into the listOfComponents\n     * @param cmp\n     */\n    setComponent(cmp : LortomComponent) : void {\n\n        let comp = this.getComponents();\n        comp.push(cmp);\n        this.deleteComponentFromCache();\n        this.setComponents(comp);\n    }\n\n    /**\n     * this function delete pages from cache\n     */\n    deletePageFromCache() : void\n    {\n        this.deleteItem('pages','listOfPages');\n    }\n\n    /**\n     * This function delete elements from cache\n     */\n    deleteElementFromCache() : void {\n        this.deleteItem('elements','listOfElements');\n    }\n\n    /**\n     * This function delete components from cache\n     */\n    deleteComponentFromCache() :void {\n        this.deleteItem('components','listOfComponents');\n    }\n\n    /**\n     * this function fire event\n     */\n    updateListOfPages()\n    {\n        this._updatePages.next();\n    }\n\n    /**\n     * this function fire event\n     */\n    updateListOfElements()\n    {\n        this._updateElements.next();\n    }\n\n    updateListOfComponents()\n    {\n        this._updateComponents.next();\n    }\n\n\n    getPageAtt() : Observable<any> {\n        return this.http.get(this.apiManager.getPathByName('getPageAtt'))\n            .map(\n                (response : Response) => {\n                    return response.json();\n                }\n            );\n    }\n\n    /**\n     * This function delete from listOfPages one page\n     * @param page\n     */\n    erasePage (page : Page){\n        let index = this.listOfPages.indexOf(page);\n\n        if(index > -1)\n        {\n            this.listOfPages.splice(index,1);\n        }\n    }\n\n    /**\n     * this is HTTP request to API\n     * @param page\n     * @returns {Observable<R>}\n     */\n    savePage(page : Page) : Observable<any> {\n\n        return this.http.put(this.apiManager.getPathByName('savePage'),page,this.getOptions())\n            .map(\n                (response : Response) => {\n                    return response.json().page;\n                }\n            );\n    }\n\n    /**\n     * This function call API in order to update an Element\n     * @param element\n     * @returns {Observable<R>}\n     */\n    saveElement(element : LortomElement) : Observable <any> {\n\n        return this.http.put(this.apiManager.getPathByName('saveElement'),element,this.getOptions())\n            .map(\n                (response : Response) => {\n                    return response.json().element;\n                }\n            );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/Services/website.service.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/pages']\\\" data-toggle=\\\"tab\\\"> Pages</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/menu']\\\" data-toggle=\\\"tab\\\"> Menu</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <a  href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Component</a>\\n        </li>\\n        <li>\\n            <a  [routerLink]=\\\"['/backend/website/elements']\\\" data-toggle=\\\"tab\\\"> Element</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                                <lt-entry-pagination\\n                                        [entry]=\\\"'50-5'\\\"\\n                                        (onEntry)=\\\"onPerPage($event)\\\">\\n                                </lt-entry-pagination>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/website/components/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteComponents()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Name</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let el of listShowComponents\\\">\\n                                        <td>\\n                                            <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,el)\\\" [(ngModel)] = \\\"el.check\\\">\\n                                        </td>\\n                                        <td>\\n                                            {{el.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a [routerLink] = \\\"['/backend/website/components',el.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <lt-pagination\\n                                [pagesToShow]=\\\"3\\\"\\n                                [perPage]=\\\"perPage\\\"\\n                                [count]=\\\"listOfComponents.length\\\"\\n                                [loading]=\\\"false\\\"\\n                                [page]=\\\"actualPage\\\"\\n                                (goNext)=\\\"onNext($event)\\\"\\n                                (goPage)=\\\"onPage($event)\\\"\\n                                (goPrev)=\\\"onPrev()\\\">\\n                        </lt-pagination>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/Components/components.component.html\n// module id = ./src/plugins/Hardel/Website/component/Components/components.component.html\n// module chunks = website.module","/**\n * Created by hernan on 20/11/2017.\n */\n\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {LortomComponent} from \"@Lortom/plugins/Hardel/Website/Services/website.interfaces\";\nimport {PaginationService} from \"@Lortom/services/pagination.service\";\nimport {WebsiteService} from \"@Lortom/plugins/Hardel/Website/Services/website.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n@Component({\n    selector : 'wb-components',\n    templateUrl : './components.component.html',\n    styles : ['']\n})\n\n\nexport class ComponentsComponent implements OnInit\n{\n    listOfComponents : LortomComponent [] = [];\n    listShowComponents : LortomComponent [];\n    myRoot = '/backend/website/components';\n    isRoot = false;\n    actualPage : number;\n    perPage : number;\n    pagServ : PaginationService;\n\n    listaComponentsDelete : LortomComponent[];\n\n    constructor(private ccService : WebsiteService, private router : Router) {\n\n        if(!this.ccService.hasPermissions(\"Hardel.Website.Component\"))\n        {\n            this.router.navigate(['/backend/dashboard']);\n        }\n\n        this.listaComponentsDelete = [];\n        this.listOfComponents = [];\n\n        //This is to manage the Pagination\n        this.pagServ = new PaginationService();\n        this.actualPage = 1;\n        this.perPage = 3;\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n\n        this.retrieveListOfComponents();\n        this.ccService.updateComponents$.subscribe(\n            () => {\n                this.retrieveListOfComponents();\n            }\n        );\n    }\n    ngOnInit(){}\n\n    retrieveListOfComponents()\n    {\n        if(!this.ccService.checkComponentsExist())\n        {\n            this.ccService.getComponentsFrom().subscribe(\n                (components: LortomComponent[]) => {\n\n                    this.listOfComponents = components;\n                    this.listOfComponents.forEach((el : LortomComponent) => {\n                        el.check = false;\n                    });\n                    this.ccService.setComponents(this.listOfComponents);\n                    this.updateListaShow();\n                }\n            );\n        }\n        else {\n            this.listOfComponents = this.ccService.getComponents();\n\n            this.listOfComponents.forEach((item : any) => {\n                if(!item.hasOwnProperty('check'))\n                {\n                    item.check = false;\n                }\n            });\n            this.updateListaShow();\n        }\n    }\n\n    onPerPage(n : number)\n    {\n        this.perPage = n;\n        this.updateListaShow();\n    }\n\n    private updateListaShow()\n    {\n        this.listShowComponents = this.pagServ.getShowList({\n            entry : this.perPage,\n            list : this.listOfComponents,\n            pageToShow : this.actualPage\n        });\n    }\n\n    onPrev()\n    {\n        this.actualPage--;\n        this.updateListaShow();\n    }\n\n    onNext(ev)\n    {\n        this.actualPage++;\n        this.updateListaShow();\n    }\n\n    onPage(page)\n    {\n        this.actualPage = page;\n        this.updateListaShow();\n    }\n\n    eventChange(ev,data : LortomComponent) : void\n    {\n        if(ev.target.checked)\n        {\n            this.listaComponentsDelete.push(data);\n        }\n        else\n        {\n            let index = this.listaComponentsDelete.indexOf(data);\n\n            if(index > -1)\n            {\n                this.listaComponentsDelete.splice(index,1);\n            }\n        }\n    }\n\n    deleteComponents()\n    {\n        if(this.listaComponentsDelete.length > 0)\n        {\n            if(confirm('Do you really want delete this Roles?'))\n            {\n                console.log(this.listaComponentsDelete);\n                this.ccService.deleteComponents(this.listaComponentsDelete).subscribe(\n                    (data : any) => {\n                        this.listaComponentsDelete = [];\n                        this.listOfComponents = data;\n                        this.ccService.setComponents(this.listOfComponents);\n                        this.updateListaShow();\n                    }\n                );\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/Components/components.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn darkorange\\\" (click)=\\\"editMode()\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                    Edit\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"col-md-2 control-label\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" id=\\\"name\\\" [ngModel] = \\\"element.name\\\" *ngIf=\\\"isEdit === false; else editName\\\" readonly>\\n                                    <ng-template #editName>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" id=\\\"name\\\" [(ngModel)] = \\\"element.name\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"object\\\" class=\\\"col-md-2 control-label\\\">Object</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"object\\\" placeholder=\\\"Object\\\" id=\\\"object\\\" [ngModel] = \\\"element.Object\\\" *ngIf=\\\"isEdit === false; else editObject\\\" readonly>\\n                                    <ng-template #editObject>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"object\\\" placeholder=\\\"Object\\\" id=\\\"object\\\" [(ngModel)] = \\\"element.Object\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"function\\\" class=\\\"col-md-2 control-label\\\">Functions</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"function\\\" placeholder=\\\"Functions\\\" id=\\\"function\\\" [ngModel] = \\\"element.functions\\\" *ngIf=\\\"isEdit === false; else editFunctions\\\" readonly>\\n                                    <ng-template #editFunctions>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"function\\\" placeholder=\\\"Functions\\\" id=\\\"function\\\" [(ngModel)] = \\\"element.functions\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"appearance\\\" class=\\\"col-md-2 control-label\\\">Appearance</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"appearance\\\" id=\\\"appearance\\\" [ngModel] = \\\"element.appearance\\\" *ngIf=\\\"isEdit === false; else editAppearance\\\" disabled></textarea>\\n                                    <ng-template #editAppearance>\\n                                        <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"appearance\\\" id=\\\"appearance\\\" [(ngModel)] = \\\"element.appearance\\\" ></textarea>\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/Element/element.component.html\n// module id = ./src/plugins/Hardel/Website/component/Element/element.component.html\n// module chunks = website.module","/**\n * Created by hernan on 17/11/2017.\n */\n\n\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {LortomElement} from \"../../Services/website.interfaces\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n@Component({\n    selector : 'wb-element',\n    templateUrl : './element.component.html',\n    styles : ['']\n})\n\nexport class ElementComponent implements OnInit\n{\n\n    @Input() element : LortomElement;\n    copyElement : LortomElement;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    notFound : boolean;\n\n    constructor(private ueService : WebsiteService,private router : ActivatedRoute, private nav : Router) {\n        this.isEdit = false;\n        this.notFound = false;\n        this.element = {\n            id : -2,\n            name: '',\n            Object : '',\n            functions : '',\n            appearance : '',\n            check : false\n        };\n\n        this.sub = this.router.params.subscribe(\n            (params) => {\n                this.id = +params['id'];\n                this.element = this.ueService.getElementByProperty('id',this.id);\n                if(this.element != null)\n                {\n                    this.notFound = true;\n                }\n                else\n                {\n                    this.nav.navigate(['/backend/not-found']);\n                }\n                this.cloneElement();\n            }\n        );\n    }\n    ngOnInit() {}\n\n    editMode(){\n        //passa in modalità edit\n        this.isEdit = !this.isEdit;\n    }\n\n    saveMode() : void\n    {\n        if(!this.isEqual(this.element,this.copyElement))\n        {\n            this.ueService.saveElement(this.element).subscribe(\n                (element : LortomElement) => {\n                    this.element = element;\n                    this.cloneElement();\n                    this.ueService.updateElementInList(this.element);\n                    this.ueService.updateListOfElements();\n                    this.editMode();\n                }\n            );\n        }\n    }\n\n    resetMode() : void\n    {\n        if(confirm(\"Do you really want reset all fields?\"))\n        {\n            this.cloneCopyElement();\n        }\n    }\n\n    cloneElement() : void\n    {\n        this.copyElement = Object.assign({},this.element);\n    }\n\n    cloneCopyElement() : void\n    {\n        this.element = Object.assign({},this.copyElement);\n    }\n\n    isEqual(v1,v2)\n    {\n        return (v1.name == v2.name)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/Element/element.component.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/pages']\\\" data-toggle=\\\"tab\\\"> Pages</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/menu']\\\" data-toggle=\\\"tab\\\"> Menu</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/components']\\\" data-toggle=\\\"tab\\\"> Component</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <a  href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Element</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                                <lt-entry-pagination\\n                                    [entry]=\\\"'50-5'\\\"\\n                                    (onEntry)=\\\"onPerPage($event)\\\">\\n                                </lt-entry-pagination>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/website/elements/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteElements()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Name</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let el of listShowElements\\\">\\n                                        <td>\\n                                            <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,el)\\\" [(ngModel)] = \\\"el.check\\\">\\n                                        </td>\\n                                        <td>\\n                                            {{el.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a [routerLink] = \\\"['/backend/website/elements',el.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <lt-pagination\\n                            [pagesToShow]=\\\"3\\\"\\n                            [perPage]=\\\"perPage\\\"\\n                            [count]=\\\"listOfElements.length\\\"\\n                            [loading]=\\\"false\\\"\\n                            [page]=\\\"actualPage\\\"\\n                            (goNext)=\\\"onNext($event)\\\"\\n                            (goPage)=\\\"onPage($event)\\\"\\n                            (goPrev)=\\\"onPrev()\\\">\\n                        </lt-pagination>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/Elements/elements.component.html\n// module id = ./src/plugins/Hardel/Website/component/Elements/elements.component.html\n// module chunks = website.module","/**\n * Created by hernan on 16/11/2017.\n */\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {LortomElement} from \"../../Services/website.interfaces\";\nimport {PaginationService} from \"../../../../../services/pagination.service\";\n@Component({\n    selector : 'wb-elements',\n    templateUrl : './elements.component.html',\n    styles : ['']\n})\n\nexport class ElementsComponent implements OnInit\n{\n    listOfElements : LortomElement [] = [];\n    listShowElements : LortomElement [];\n    myRoot = '/backend/website/elements';\n    isRoot = false;\n    actualPage : number;\n    perPage : number;\n    pagServ : PaginationService;\n\n    listaElementsDelete : LortomElement[];\n\n    constructor(private ecService : WebsiteService, private router : Router) {\n\n        if(!this.ecService.hasPermissions(\"Hardel.Website.Element\"))\n        {\n            this.router.navigate(['/backend/dashboard']);\n        }\n\n        this.listaElementsDelete = [];\n        this.listOfElements = [];\n\n        //This is to manage the Pagination\n        this.pagServ = new PaginationService();\n        this.actualPage = 1;\n        this.perPage = 3;\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n\n        this.retrieveListOfElements();\n        this.ecService.updateElements$.subscribe(\n            () => {\n                this.retrieveListOfElements();\n            }\n        );\n    }\n    ngOnInit(){}\n\n    retrieveListOfElements()\n    {\n        if(!this.ecService.checkElementsExist())\n        {\n            this.ecService.getElementsFrom().subscribe(\n                (elements: LortomElement[]) => {\n\n                    this.listOfElements = elements;\n                    this.listOfElements.forEach((el : LortomElement) => {\n                        el.check = false;\n                    });\n                    this.ecService.setElements(this.listOfElements);\n                    this.updateListaShow();\n                }\n            );\n        }\n        else {\n            this.listOfElements = this.ecService.getElements();\n\n            this.listOfElements.forEach((item : any) => {\n                if(!item.hasOwnProperty('check'))\n                {\n                    item.check = false;\n                }\n            });\n            this.updateListaShow();\n        }\n\n    }\n\n    onPerPage(n : number)\n    {\n        this.perPage = n;\n        this.updateListaShow();\n    }\n\n    private updateListaShow()\n    {\n        this.listShowElements = this.pagServ.getShowList({\n            entry : this.perPage,\n            list : this.listOfElements,\n            pageToShow : this.actualPage\n        });\n    }\n\n    onPrev()\n    {\n        this.actualPage--;\n        this.updateListaShow();\n    }\n\n    onNext(ev)\n    {\n        this.actualPage++;\n        this.updateListaShow();\n    }\n\n    onPage(page)\n    {\n        this.actualPage = page;\n        this.updateListaShow();\n    }\n\n    eventChange(ev,data : LortomElement) : void\n    {\n        if(ev.target.checked)\n        {\n            this.listaElementsDelete.push(data);\n        }\n        else\n        {\n            let index = this.listaElementsDelete.indexOf(data);\n\n            if(index > -1)\n            {\n                this.listaElementsDelete.splice(index,1);\n            }\n        }\n    }\n\n    deleteElements()\n    {\n        if(this.listaElementsDelete.length > 0)\n        {\n            if(confirm('Do you really want delete this Roles?'))\n            {\n                console.log(this.listaElementsDelete);\n                this.ecService.deleteElements(this.listaElementsDelete).subscribe(\n                    (data : any) => {\n                        this.listaElementsDelete = [];\n                        this.listOfElements = data;\n                        this.ecService.setElements(this.listOfElements);\n                        this.updateListaShow();\n                    }\n                );\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/Elements/elements.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"nome\\\" class=\\\"col-md-2 control-label\\\">Nome</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" id=\\\"nome\\\" [(ngModel)] = \\\"component.name\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"appearance\\\" class=\\\"col-md-2 control-label\\\">Appearance</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"appearance\\\" id=\\\"appearance\\\" [(ngModel)] = \\\"component.appearance\\\" ></textarea>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-list\\\"></i>\\n                <span>Elements</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn cyan\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\">\\n                    <i class=\\\"fa fa-plus\\\"></i>\\n                    Add\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"component.elements.length > 0\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>\\n                                            <a>Nome</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let el of component.elements\\\">\\n                                        <td>\\n                                            {{el.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a class=\\\"td_orange\\\" (click)=\\\"eraseElement(el)\\\" *ngIf=\\\"isEdit == true\\\"><i class=\\\"fa fa-window-close-o\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n    <div id=\\\"addModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addModal\\\"  aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <div class=\\\"modal-title\\\">\\n                        Searching For Permission\\n                        <button class=\\\"close\\\" data-dismiss = \\\"modal\\\" aria-label=\\\"hidden\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label class=\\\"col-md-4\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup)=\\\"filter()\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"suggestions\\\" *ngIf=\\\"filteredList.length > 0\\\">\\n                                        <ul>\\n                                            <li class=\\\"suggestion-li\\\" *ngFor=\\\"let item of filteredList\\\">\\n                                                <a (click)=\\\"addElement(item)\\\">{{item.name}}</a>\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <div class=\\\"m-footer\\\">\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/NewComponent/componentnew.component.html\n// module id = ./src/plugins/Hardel/Website/component/NewComponent/componentnew.component.html\n// module chunks = website.module","/**\n * Created by hernan on 20/11/2017.\n */\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {LortomComponent, LortomElement} from \"@Lortom/plugins/Hardel/Website/Services/website.interfaces\";\nimport {WebsiteService} from \"@Lortom/plugins/Hardel/Website/Services/website.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector : 'wb-new-component',\n    templateUrl : './componentnew.component.html',\n    styles : ['']\n})\n\nexport class NewComponent implements OnInit\n{\n    component : LortomComponent;\n    copyComponent : LortomComponent;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    listElements = [];\n    filteredList : LortomElement[];\n    query : string;\n\n    constructor(private ncsService : WebsiteService, private router : Router){\n        this.isEdit = false;\n        this.filteredList = [];\n        this.query = '';\n\n        this.component = {\n            id: -1,\n            name : '',\n            check : false,\n            appearance : '',\n            elements : []\n        }\n    }\n    ngOnInit(){\n        this.retriveElement();\n    }\n\n    private retriveElement()\n    {\n        this.ncsService.getElementsFrom().subscribe(\n            (elements : LortomElement []) => {\n                this.listElements = elements;\n                this.component.elements.forEach((item : LortomElement)=>{\n                    let index = -1;\n                    for(let i = 0; i<this.listElements.length; i++)\n                    {\n                        let m = this.listElements[i];\n\n                        if(m.id === item.id && m.name === item.name)\n                        {\n                            index = i;\n                            break;\n                        }\n                    }\n                    if(index > -1){\n                        this.listElements.splice(index,1);\n                    }\n                });\n            }\n        );\n        this.cloneComponent();\n    }\n\n    /**\n     * This function filter permission for research\n     */\n    filter(){\n        if (this.query !== \"\") {\n            this.filteredList = this.listElements.filter(function(el){\n                return el.name.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }.bind(this));\n        }\n    }\n\n    /**\n     * This function delete Permission from role.permissions\n     * @param item\n     */\n    eraseElement(item) {\n        // cancella il permesso\n        let index = this.component.elements.indexOf(item);\n\n        if(index > -1)\n        {\n            this.component.elements.splice(index,1);\n        }\n\n    }\n\n    /**\n     * This Function add Permission at the moment to role.permissions\n     * @param item\n     */\n    addElement(item : LortomElement) {\n        //aggiunge un permesso\n        this.filteredList = [];\n        this.query = item.name;\n        this.component.elements.push(item);\n    }\n\n    /**\n     * This function go to save Mode\n     */\n    saveMode() {\n        //salva i cambiamenti\n\n        if(!this.isEqual(this.component,this.copyComponent))\n        {\n            if(this.component.name.length == 0)\n            {\n                alert('You must write a name of Role, please!');\n                this.cloneCopyComponent();\n                return;\n            }\n\n            this.ncsService.createComponent(this.component).subscribe(\n                (data : any) => {\n                    if(!data.hasOwnProperty('state'))\n                    {\n                        data.state = false;\n                    }\n                    //push the item into roles\n                    this.ncsService.setComponent(data);\n                    this.ncsService.updateListOfComponents();\n                    //navigate to Settings Roles\n                    this.router.navigate(['/backend/website/components']);\n                }\n            );\n\n        }\n    }\n\n    isEqual(v,v2) : boolean\n    {\n        return (v.name == v2.name) && (v.state == v2.state) && (v.elements.length == v2.elements.length)\n    }\n\n    /**\n     * This function clone the Role\n     */\n    cloneComponent(){\n        let elements: LortomElement[] = [];\n\n        for(let perm of this.component.elements)\n        {\n            elements.push(perm);\n        }\n\n        this.copyComponent = Object.assign({},this.component);\n        this.copyComponent.elements = elements;\n    }\n\n    /**\n     * This function clone the CopyRole\n     */\n    cloneCopyComponent()\n    {\n        let elements: LortomElement[] = [];\n\n        for(let perm of this.copyComponent.elements)\n        {\n            elements.push(perm);\n        }\n\n        this.component = Object.assign({},this.copyComponent);\n        this.component.elements = elements;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/NewComponent/componentnew.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"name\\\" class=\\\"col-md-2 control-label\\\">Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" id=\\\"name\\\" [(ngModel)] = \\\"element.name\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"object\\\" class=\\\"col-md-2 control-label\\\">Object</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"object\\\" placeholder=\\\"Object\\\" id=\\\"object\\\" [(ngModel)] = \\\"element.Object\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"function\\\" class=\\\"col-md-2 control-label\\\">Functions</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"function\\\" placeholder=\\\"Functions\\\" id=\\\"function\\\" [(ngModel)] = \\\"element.functions\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"appearance\\\" class=\\\"col-md-2 control-label\\\">Appearance</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"appearance\\\" id=\\\"appearance\\\" [(ngModel)] = \\\"element.appearance\\\" ></textarea>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/NewElement/elementnew.component.html\n// module id = ./src/plugins/Hardel/Website/component/NewElement/elementnew.component.html\n// module chunks = website.module","/**\n * Created by hernan on 17/11/2017.\n */\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {LortomElement} from \"../../Services/website.interfaces\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector : 'wb-new-element',\n    templateUrl : './elementnew.component.html',\n    styles : ['']\n})\n\nexport class ElementNewComponent implements OnInit\n{\n    element : LortomElement;\n    copyElement : LortomElement;\n\n    constructor(private neService : WebsiteService, private router : Router) {\n        this.element = {\n            id : -1,\n            name: '',\n            Object : '',\n            functions : '',\n            appearance : '',\n            check : false\n        };\n\n        this.cloneElement();\n\n    }\n    ngOnInit() {}\n\n    saveMode() : void\n    {\n        if(!this.isEqual(this.element,this.copyElement))\n        {\n            this.neService.createElement(this.element).subscribe(\n                (element: LortomElement) => {\n                    this.neService.setElement(element);\n                    this.neService.updateListOfElements();\n                    this.router.navigate(['/backend/website/elements']);\n                }\n            );\n        }\n    }\n\n    resetMode() : void\n    {\n        if(confirm(\"Do you really want reset all fields?\"))\n        {\n            this.cloneCopyElement();\n        }\n    }\n\n    cloneElement() : void\n    {\n        this.copyElement = Object.assign({},this.element);\n    }\n\n    cloneCopyElement() : void\n    {\n        this.element = Object.assign({},this.copyElement);\n    }\n\n    isEqual(v1,v2)\n    {\n        return (v1.name == v2.name)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/NewElement/elementnew.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"title\\\" class=\\\"col-md-2 control-label\\\">Title</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" id=\\\"title\\\" [(ngModel)] = \\\"page.title\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"slug\\\" class=\\\"col-md-2 control-label\\\">Slug</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"slug\\\" placeholder=\\\"Slug\\\" id=\\\"slug\\\" [(ngModel)] = \\\"page.slug\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"fileName\\\" class=\\\"col-md-2 control-label\\\">File Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fileName\\\" placeholder=\\\"File Name\\\" id=\\\"fileName\\\" [(ngModel)] = \\\"page.fileName\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"meta_tag\\\" class=\\\"col-md-2 control-label\\\">Meta Tag</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_tag\\\" placeholder=\\\"Meta Tag\\\" id=\\\"meta_tag\\\" [(ngModel)] = \\\"page.metaTag\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"meta_desc\\\" class=\\\"col-md-2 control-label\\\">Meta Desc</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_desc\\\" placeholder=\\\"Meta Desc\\\" id=\\\"meta_desc\\\" [(ngModel)] = \\\"page.metaDesc\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"new-page\\\" class=\\\"col-md-2 control-label\\\">State</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <select class=\\\"form-control\\\" name=\\\"state\\\" [(ngModel)] = \\\"page.state\\\">\\n                                        <option *ngFor=\\\"let x of listOfState\\\" [ngValue]=\\\"x\\\">{{x.label}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"new-page\\\" class=\\\"col-md-2 control-label\\\">Content</label>\\n                                <div class=\\\"col-md-10\\\">\\n                                   <app-editor [elementId]=\\\"'new-page'\\\" id=\\\"new-page\\\" [content]=\\\"page.content\\\" (onEditorKeyup)=\\\"keyupHandlerFunction($event)\\\"></app-editor>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/NewPage/pagenew.component.html\n// module id = ./src/plugins/Hardel/Website/component/NewPage/pagenew.component.html\n// module chunks = website.module","\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Page} from \"../../Services/website.interfaces\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector : 'wb-new-page',\n    templateUrl : './pagenew.component.html',\n    styles : ['']\n})\n\nexport class PageNewComponent implements OnInit\n{\n    page : Page;\n    copyPage : Page;\n    listOfState : {id? : number, label? : string}[];\n\n    constructor(private pn_Service : WebsiteService, private rout : Router){\n        this.page =  {\n            id : -1,\n            title : '',\n            slug : '',\n            metaTag : '',\n            metaDesc : '',\n            check : false,\n            state : {},\n            content: '',\n            fileName : '',\n        }\n\n        this.clonePage();\n\n        this.pn_Service.getPageAtt().subscribe(\n            (data : any) => {\n               this.listOfState = data.states;\n            }\n        );\n    }\n    ngOnInit() {}\n\n    resetMode(){\n        if (confirm('Do you want to reset all data?')) {\n            this.cloneCopyPage();\n        }\n    }\n\n    clonePage()\n    {\n        this.copyPage = Object.assign({},this.page);\n    }\n\n    cloneCopyPage()\n    {\n        this.page = Object.assign({},this.copyPage);\n    }\n\n    saveMode()\n    {\n        if(this.isEqual(this.page,this.copyPage))\n        {\n            this.pn_Service.createPage(this.page).subscribe(\n                (page : Page) => {\n                    this.pn_Service.setPage(page);\n                    this.pn_Service.updateListOfPages();\n                    this.rout.navigate(['/backend/website/pages']);\n                }\n            );\n        }\n    }\n\n    isEqual(v1,v2)\n    {\n        return (v1.title != v2.title && v1.slug != v2.slug);\n    }\n\n    keyupHandlerFunction(event)\n    {\n        this.page.content = event;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/NewPage/pagenew.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn darkorange\\\" (click)=\\\"editMode()\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                    Edit\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"title\\\" class=\\\"col-md-2 control-label\\\">Title</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" [ngModel] = \\\"page.title\\\" placeholder=\\\"Title\\\" id=\\\"title\\\" *ngIf=\\\"isEdit === false; else editTitle\\\" readonly>\\n                                    <ng-template #editTitle>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" id=\\\"title\\\" [(ngModel)] = \\\"page.title\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"slug\\\" class=\\\"col-md-2 control-label\\\">Slug</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"slug\\\" placeholder=\\\"Slug\\\" id=\\\"slug\\\" [ngModel] = \\\"page.slug\\\" *ngIf=\\\"isEdit === false; else editSlug\\\" readonly>\\n                                    <ng-template #editSlug>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"slug\\\" placeholder=\\\"Slug\\\" id=\\\"slug\\\" [(ngModel)] = \\\"page.slug\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"fileName\\\" class=\\\"col-md-2 control-label\\\">File Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fileName\\\" placeholder=\\\"File Name\\\" id=\\\"fileName\\\" [ngModel] = \\\"page.fileName\\\" *ngIf=\\\"isEdit === false; else editFileName\\\" readonly>\\n                                    <ng-template #editFileName>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fileName\\\" placeholder=\\\"File Name\\\" id=\\\"fileName\\\" [(ngModel)] = \\\"page.fileName\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"meta_tag\\\" class=\\\"col-md-2 control-label\\\">Meta Tag</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_tag\\\" placeholder=\\\"Meta Tag\\\" id=\\\"meta_tag\\\" [ngModel] = \\\"page.metaTag\\\" *ngIf=\\\"isEdit === false; else editMetaTag\\\" readonly>\\n                                    <ng-template #editMetaTag>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_tag\\\" placeholder=\\\"Meta Tag\\\" id=\\\"meta_tag\\\" [(ngModel)] = \\\"page.metaTag\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"meta_desc\\\" class=\\\"col-md-2 control-label\\\">Meta Desc</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_desc\\\" placeholder=\\\"Meta Desc\\\" id=\\\"meta_desc\\\" [ngModel] = \\\"page.metaDesc\\\" *ngIf=\\\"isEdit === false; else editMetaDesc\\\" readonly>\\n                                    <ng-template #editMetaDesc>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_desc\\\" placeholder=\\\"Meta Desc\\\" id=\\\"meta_desc\\\" [(ngModel)] = \\\"page.metaDesc\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"state\\\" class=\\\"col-md-2 control-label\\\">State</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <select class=\\\"form-control\\\" name=\\\"state\\\"  id=\\\"state\\\" *ngIf=\\\"isEdit === false; else editState\\\" disabled>\\n                                        <ng-container>\\n                                            <option *ngFor=\\\"let x of listOfState\\\" [ngValue]=\\\"x\\\" [attr.selected] = \\\"x == page.state ? true : null\\\">{{x.label}}</option>\\n                                        </ng-container>\\n                                    </select>\\n                                    <ng-template #editState>\\n                                        <select class=\\\"form-control\\\" name=\\\"state\\\" [(ngModel)] = \\\"page.state\\\">\\n                                            <option *ngFor=\\\"let x of listOfState\\\" [ngValue]=\\\"x\\\" [attr.selected] = \\\"x == page.state ? true : null\\\">{{x.label}}</option>\\n                                        </select>\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"edit-page\\\" class=\\\"col-md-2 control-label\\\">Content</label>\\n                                <div class=\\\"col-md-10\\\">\\n                                    <div class=\\\"form-control\\\" [innerHtml] = \\\"page.content\\\" *ngIf=\\\"isEdit === false; else editContent\\\" disabled></div>\\n                                    <ng-template #editContent>\\n                                        <app-editor [elementId]=\\\"'edit-page'\\\" id=\\\"edit-page\\\" [content]=\\\"page.content\\\" (onEditorKeyup)=\\\"keyupHandlerFunction($event)\\\"></app-editor>\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/Page/page.component.html\n// module id = ./src/plugins/Hardel/Website/component/Page/page.component.html\n// module chunks = website.module","\n\n\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {Page} from \"../../Services/website.interfaces\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n@Component({\n    selector : 'wb-page',\n    templateUrl : './page.component.html',\n    styles : ['']\n})\n\nexport class PageComponent implements OnInit\n{\n    @Input() page : Page;\n    copyPage : Page;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    query : string;\n    notFound : boolean;\n    listOfState : {id? : number, label? : string}[];\n\n    constructor(private pService : WebsiteService, private router : ActivatedRoute,private nav : Router) {\n        this.isEdit = false;\n        this.notFound = false;\n        this.query = '';\n        this.page = {\n            id : -2,\n            title : '',\n            check : false,\n            state : {},\n            metaDesc : '',\n            metaTag : '',\n            slug : '',\n            fileName : '',\n            content : ''\n        };\n        this.pService.getPageAtt().subscribe(\n            (data : any) => {\n                this.listOfState = data.states;\n            }\n        );\n        this.sub = this.router.params.subscribe(\n            (params) => {\n                this.id = +params['id'];\n                this.page = this.pService.getPageByProperty('id',this.id);\n                if(this.page != null)\n                {\n                    this.notFound = true;\n                }\n                else\n                {\n                    this.nav.navigate(['/backend/not-found']);\n                }\n                this.clonePage();\n            }\n        );\n    }\n    ngOnInit() {}\n\n    /**\n     * This function pass into edit Mode\n     */\n    editMode(){\n        //passa in modalità edit\n        this.isEdit = !this.isEdit;\n    }\n\n    resetMode(){\n        if (confirm('Do you want to reset all data?')) {\n            this.cloneCopyPage();\n        }\n    }\n\n    clonePage()\n    {\n        this.copyPage = Object.assign({},this.page);\n    }\n\n    cloneCopyPage()\n    {\n        this.page = Object.assign({},this.copyPage);\n    }\n\n    saveMode()\n    {\n        if(this.page.slug.length>0)\n        {\n            this.pService.savePage(this.page).subscribe(\n                (page : Page) => {\n                    this.page = page;\n                    this.clonePage();\n                    this.pService.updatePageInList(this.page);\n                    this.pService.updateListOfPages();\n                    this.editMode();\n                }\n            );\n        }\n        else\n        {\n            alert('The slug cannot be empty, please!');\n            this.cloneCopyPage();\n            return;\n        }\n    }\n\n    keyupHandlerFunction(event)\n    {\n        this.page.content = event;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/Page/page.component.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"active\\\">\\n            <a href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Pages</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/menu']\\\" data-toggle=\\\"tab\\\"> Menu</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/components']\\\" data-toggle=\\\"tab\\\"> Component</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/elements']\\\" data-toggle=\\\"tab\\\"> Element</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                                <lt-entry-pagination\\n                                [entry]=\\\"'50-5'\\\"\\n                                (onEntry)=\\\"onPerPage($event)\\\"\\n                                >\\n                                </lt-entry-pagination>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/website/pages/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deletePages()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Title</a>\\n                                        </th>\\n                                        <th>\\n                                            Slug\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let page of listaPages\\\">\\n                                        <td>\\n                                            <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,page)\\\" [(ngModel)] = \\\"page.check\\\">\\n                                        </td>\\n                                        <td>\\n                                            {{page.title}}\\n                                        </td>\\n                                        <td>\\n                                            {{page.slug}}\\n                                        </td>\\n                                        <td>\\n                                            <a [routerLink] = \\\"['/backend/website/pages',page.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <lt-pagination\\n                            [pagesToShow]=\\\"3\\\"\\n                            [perPage]=\\\"perPage\\\"\\n                            [count]=\\\"listaPages.length\\\"\\n                            [loading]=\\\"false\\\"\\n                            [page]=\\\"actualPage\\\"\\n                            (goNext)=\\\"onNext($event)\\\"\\n                            (goPage)=\\\"onPage($event)\\\"\\n                            (goPrev)=\\\"onPrev()\\\"\\n                        ></lt-pagination>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/Pages/pages.component.html\n// module id = ./src/plugins/Hardel/Website/component/Pages/pages.component.html\n// module chunks = website.module","\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Page} from \"../../Services/website.interfaces\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {PaginationService} from \"../../../../../services/pagination.service\";\n@Component({\n    selector : 'wb-pages',\n    templateUrl : './pages.component.html',\n    styles : ['']\n})\n\nexport class PagesComponent implements OnInit\n{\n    listaPages : Page[] = [];\n    listaShowPages : Page[];\n    myRoot = '/backend/website/pages';\n    isRoot = false;\n    actualPage : number;\n    perPage : number;\n\n    listaPageDelete : Page[];\n\n    pagServ : PaginationService;\n\n    constructor(private wb_Service : WebsiteService, private router :Router) {\n\n        if(!this.wb_Service.hasPermissions(\"Hardel.Website.Pages\"))\n        {\n            this.router.navigate(['/backend/dashboard']);\n        }\n        this.listaPageDelete = [];\n\n        //This is to manage the Pagination\n        this.pagServ = new PaginationService();\n        this.actualPage = 1;\n        this.perPage = 3;\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n        this.retrieveListOfPages();\n        this.wb_Service.updatePages$.subscribe(\n            () => {\n                this.retrieveListOfPages();\n            }\n        );\n    }\n\n    ngOnInit() {\n    }\n\n    retrieveListOfPages() : void\n    {\n        if(!this.wb_Service.checkPagesExist())\n        {\n            this.wb_Service.getPagesFrom().subscribe(\n                (pages: Page[]) => {\n\n                    this.listaPages = pages;\n                    this.listaPages.forEach((page : Page) => {\n                        page.check = false;\n                    });\n                    this.wb_Service.setPages(this.listaPages);\n                   this.updateListaShow();\n                }\n            );\n        }\n        else {\n            this.listaPages = this.wb_Service.getPages();\n            this.listaPages.forEach((item : any) => {\n                if(!item.hasOwnProperty('check'))\n                {\n                    item.check = false;\n                }\n            });\n            this.updateListaShow();\n        }\n    }\n\n    onPerPage(n : number)\n    {\n        this.perPage = n;\n    }\n\n    private updateListaShow()\n    {\n        this.listaShowPages = this.pagServ.getShowList({\n            entry : this.perPage,\n            list : this.listaPages,\n            pageToShow : this.actualPage\n        });\n    }\n\n    onPrev()\n    {\n        this.actualPage--;\n        this.updateListaShow();\n    }\n\n    onNext(ev)\n    {\n        this.actualPage++;\n        this.updateListaShow();\n    }\n\n    onPage(page)\n    {\n        this.actualPage = page;\n        this.updateListaShow();\n    }\n\n    /**\n     * function to push or splice item into Deleted List of Roles\n     * @param ev\n     * @param data\n     */\n    eventChange(ev,data : Page) : void\n    {\n        if(ev.target.checked)\n        {\n            this.listaPageDelete.push(data);\n        }\n        else\n        {\n            let index = this.listaPageDelete.indexOf(data);\n\n            if(index > -1)\n            {\n                this.listaPageDelete.splice(index,1);\n            }\n        }\n    }\n\n    deletePages()\n    {\n        if(this.listaPageDelete.length > 0)\n        {\n            if(confirm('Do you really want delete this Roles?'))\n            {\n                this.wb_Service.deletePages(this.listaPageDelete).subscribe(\n                    (data : any) => {\n                        this.listaPageDelete = [];\n                        this.listaPages = data;\n                        this.wb_Service.setPages(this.listaPages);\n                        this.updateListaShow();\n                    }\n                );\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/Pages/pages.component.ts","/**\n * Created by hernan on 13/11/2017.\n */\n\n\nexport {WebsiteComponent} from './website.component';\nexport {PagesComponent} from './Pages/pages.component';\nexport {PageNewComponent} from './NewPage/pagenew.component';\nexport {PageComponent} from './Page/page.component';\nexport {ElementsComponent} from './Elements/elements.component';\nexport {ElementNewComponent} from './NewElement/elementnew.component';\nexport {ElementComponent} from './Element/element.component';\nexport {ComponentsComponent} from './Components/components.component';\nexport {NewComponent} from './NewComponent/componentnew.component';\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/index.ts","module.exports = \"<div class=\\\"content-box\\\">\\n    <div class=\\\"content-header\\\">\\n        <h1>Website</h1>\\n        <breadcrumbs></breadcrumbs>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n        <div class=\\\"portlet\\\" *ngIf=\\\"isRoot === true\\\">\\n            <div class=\\\"portlet-title\\\">\\n                <div class=\\\"caption\\\">\\n                    <i class=\\\"fa fa-database\\\"></i>\\n                    <span>Overviews</span>\\n                </div>\\n                <div class=\\\"actions\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"portlet-body\\\">\\n                <div class=\\\"tiles\\\">\\n                    <a [routerLink]=\\\"['/backend/website/pages']\\\">\\n                        <div class=\\\"tile double bg-cyan\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-clone fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Pages\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <a [routerLink]=\\\"['/backend/website/menu']\\\">\\n                        <div class=\\\"tile bg-orange\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-list fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Menu\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <a [routerLink]=\\\"['/backend/website/components']\\\">\\n                        <div class=\\\"tile bg-lightgreen\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-cubes fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Component\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <a [routerLink]=\\\"['/backend/website/elements']\\\">\\n                        <div class=\\\"tile bg-fucsia\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-cube fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Element\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/Hardel/Website/component/website.component.html\n// module id = ./src/plugins/Hardel/Website/component/website.component.html\n// module chunks = website.module","import {Component, OnInit} from \"@angular/core\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n@Component({\n    selector: 'app-website',\n    templateUrl: './website.component.html',\n})\n\nexport class WebsiteComponent implements OnInit {\n    isRoot : boolean;\n    myRoot = '/backend/website';\n    constructor(private r: Router){\n        this.isRoot = true;\n\n        this.r.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n    }\n    ngOnInit() {}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/component/website.component.ts","import { NgModule } from '@angular/core';\nimport {routing,websiteComponent} from \"./website.routing\";\nimport {BreadCrumbModule} from \"@Lortom-Backend/breadcrumbs/breadcrumbs.module\";\nimport {CommonModule} from \"@angular/common\";\nimport {HttpModule} from \"@angular/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {WebsiteService} from \"./Services/website.service\";\nimport {EditorModule} from \"@Lortom-Backend/Editor/editor\";\nimport {UIElementModule} from \"@Lortom-Backend/UIElement/uielement.module\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        HttpModule,\n        routing,\n        BreadCrumbModule,\n        EditorModule,\n        UIElementModule\n    ],\n    providers : [WebsiteService],\n    declarations: [websiteComponent]\n})\n\nexport class WebsiteModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/website.module.ts","\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {WebsiteComponent,\n        PagesComponent,\n        PageNewComponent,\n        PageComponent,\n        ElementsComponent,\n        ElementNewComponent,\n        ElementComponent,\n        ComponentsComponent,\n        NewComponent,\n} from './component';\nimport {ModuleWithProviders} from \"@angular/core\";\n\n\nconst routes : Routes = [\n    {path:'', component: WebsiteComponent, data : { breadcrumb : 'Website'}, children : [\n        {path: 'pages', component: PagesComponent, data : {breadcrumb : 'Pages'}, children : [\n            {path: 'new', component : PageNewComponent, data : {breadcrumb : 'New'}},\n            {path: ':id', component : PageComponent, data : {breadcrumb : 'Page'}}\n        ]},\n        {path: 'elements', component: ElementsComponent, data : {breadcrumb : 'Elements'}, children: [\n            {path: 'new', component : ElementNewComponent, data : {breadcrumb : 'New'}},\n            {path : ':id', component : ElementComponent, data : {breadcrumb : 'Element'}}\n        ]},\n        {path : 'components', component: ComponentsComponent, data : {breadcrumb : 'Components'}, children : [\n            {path : 'new', component : NewComponent, data : {breadcrumb : 'New'}}\n        ]}\n    ]}\n];\n\nexport const routing : ModuleWithProviders = RouterModule.forChild(routes);\n\nexport const websiteComponent = [WebsiteComponent,PagesComponent, PageNewComponent,PageComponent,ElementsComponent,ElementNewComponent,ElementComponent,ComponentsComponent,NewComponent];\n\n//console.log(websiteComponent);\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/Hardel/Website/website.routing.ts"],"sourceRoot":"webpack:///"}