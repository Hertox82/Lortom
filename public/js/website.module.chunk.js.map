{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/pagination/pagination.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/pagination/pagination.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/pagination/show-entry.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/pagination/show-entry.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/uielement.module.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/Services/website.interfaces.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/Services/website.service.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Elements/elements.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Elements/elements.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/NewPage/pagenew.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/NewPage/pagenew.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Page/page.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Page/page.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Pages/pages.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Pages/pages.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/index.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/website.component.html","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/website.component.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/website.module.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/website.routing.ts","/Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/services/pagination.service.ts"],"names":[],"mappings":"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","file":"website.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"count !== 0\\\">\\n    <div class=\\\"col-sm-5\\\">\\n        <div class=\\\"dataTables_info\\\">Showing {{getMin()}} to {{getMax()}} of {{count}} entries</div>\\n    </div>\\n    <div class=\\\"col-sm-7\\\">\\n        <div class=\\\"dataTables_paginate\\\">\\n            <ul class=\\\"pagination\\\">\\n                <li class=\\\"page-item\\\">\\n                    <a class=\\\"page-link\\\" (click)=\\\"onPrev()\\\" [ngClass]=\\\"{ 'disabled': page === 1 || loading }\\\" aria-label=\\\"Previous\\\"><span aria-hidden=\\\"true\\\">«</span></a>\\n                </li>\\n                <li class=\\\"page-item\\\" *ngFor=\\\"let pageNum of getPages()\\\" [ngClass]=\\\"{'active' : pageNum === page, 'disabled' : loading}\\\">\\n                    <a class=\\\"page-link\\\" (click)=\\\"onPage(pageNum)\\\">{{pageNum}}</a>\\n                </li>\\n                <li class=\\\"page-item\\\">\\n                    <a class=\\\"page-link\\\" (click)=\\\"onNext(true)\\\"  [ngClass]=\\\"{ 'disabled': page === 1 || loading }\\\" aria-label=\\\"Next\\\"><span aria-hidden=\\\"true\\\">»</span></a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/pagination/pagination.component.html\n// module id = ../../../../../src/app/backend-module/UIElement/pagination/pagination.component.html\n// module chunks = website.module","/**\n * Created by hernan on 16/11/2017.\n */\n\n\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\n@Component({\n    selector : 'lt-pagination',\n    templateUrl : './pagination.component.html',\n    styles : ['']\n})\n\n\nexport class PaginationComponent implements OnInit\n{\n    @Input() count : number;\n    @Input() page : number;\n    @Input() loading = false;\n    @Input() perPage: number;\n    @Input() pagesToShow : number;\n\n    @Output() goPrev = new EventEmitter<boolean>();\n    @Output() goNext = new EventEmitter<boolean>();\n    @Output() goPage = new EventEmitter<number>();\n    constructor() {}\n    ngOnInit() {}\n\n\n    getMin() : number {\n        return ((this.perPage * this.page) - this.perPage) +1;\n    }\n\n    getMax() : number{\n        let max = this.perPage * this.page;\n\n        if(max > this.count)\n        {\n            max = this.count;\n        }\n        return max;\n    }\n\n    onPrev() : void{\n        this.goPrev.emit(true);\n    }\n\n    onNext(next : boolean) : void{\n        this.goNext.emit(next);\n    }\n\n    onPage(page : number) : void {\n        this.goPage.emit(page);\n    }\n\n    lastPage() : boolean\n    {\n        return this.perPage * this.page > this.count;\n    }\n\n    getPages() : number []\n    {\n        const c = Math.ceil(this.count / this.perPage);\n        const p = this.page || 1;\n        const pagesToShow = this.pagesToShow || 9;\n        const pages: number[] = [];\n        pages.push(p);\n        const times = pagesToShow - 1;\n        for (let i = 0; i < times; i++) {\n            if (pages.length < pagesToShow) {\n                if (Math.min.apply(null, pages) > 1) {\n                    pages.push(Math.min.apply(null, pages) - 1);\n                }\n            }\n            if (pages.length < pagesToShow) {\n                if (Math.max.apply(null, pages) < c) {\n                    pages.push(Math.max.apply(null, pages) + 1);\n                }\n            }\n        }\n        pages.sort((a, b) => a - b);\n        return pages;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/pagination/pagination.component.ts","module.exports = \"<div class=\\\"dataTables_length\\\">\\n    <label>\\n        Show\\n        <select class=\\\"form-control input-sm\\\" name=\\\"example_length\\\" (change)=\\\"passVal($event.target.value)\\\">\\n            <option *ngFor=\\\"let val of listEntry\\\" value = \\\"{{val}}\\\">{{val}}</option>\\n        </select>\\n        entries\\n    </label>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/pagination/show-entry.component.html\n// module id = ../../../../../src/app/backend-module/UIElement/pagination/show-entry.component.html\n// module chunks = website.module","/**\n * Created by hernan on 17/11/2017.\n */\n\n\n\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\n@Component({\n    selector : 'lt-entry-pagination',\n    templateUrl : './show-entry.component.html',\n    styles : ['']\n})\n\nexport class ShowEntryComponent implements OnInit\n{\n    @Input() entry : string;\n    listEntry : number [] = [];\n\n    @Output() onEntry = new EventEmitter<number>();\n\n    constructor() {\n\n    }\n    ngOnInit() {\n        let entries = this.entry.split('-');\n\n        let maxNumber = parseInt(entries[0]);\n        let grouping = parseInt(entries[1]);\n\n        let iterator = maxNumber/grouping;\n\n        for(let i = 0 ; i<iterator; i++)\n        {\n            let number = (i +1) * grouping;\n            this.listEntry.push(number);\n        }\n\n        this.onEntry.emit(this.listEntry[0]);\n    }\n\n\n    passVal(event)\n    {\n        this.onEntry.emit(parseInt(event));\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/pagination/show-entry.component.ts","/**\n * Created by hernan on 16/11/2017.\n */\n\n\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {PaginationComponent} from \"./pagination/pagination.component\";\nimport {ShowEntryComponent} from \"./pagination/show-entry.component\";\n@NgModule({\n    imports : [\n        CommonModule,\n        FormsModule\n    ],\n    declarations : [PaginationComponent,ShowEntryComponent],\n    providers : [],\n    exports : [PaginationComponent,ShowEntryComponent]\n})\n\nexport class UIElementModule {}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/app/backend-module/UIElement/uielement.module.ts","/**\n * Created by hernan on 14/11/2017.\n */\n\n\nexport interface Page {\n    id : number,\n    title : string,\n    slug : string,\n    content : string,\n    metaTag : string,\n    metaDesc : string,\n    fileName : string,\n    check : boolean,\n    state : { id? : number , label? : string },\n}\n\n\nexport interface LortomElement {\n    id : number,\n    name : string,\n    Object : string,\n    functions : string,\n    appearance : string,\n    check : boolean\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/Services/website.interfaces.ts","/**\n * Created by hernan on 14/11/2017.\n */\n\n\nimport {Injectable} from \"@angular/core\";\nimport {ApiManager} from \"../../../../app/urlApi/api.manager\";\nimport {Headers, Http, RequestOptions, Response} from \"@angular/http\";\nimport {User} from \"../../../../app/backend-module/user-module/user-model/user.interface\";\nimport {Subject} from \"rxjs/Subject\";\nimport {Observable} from \"rxjs/Observable\";\nimport {LortomElement, Page} from \"./website.interfaces\";\n\n@Injectable()\nexport class WebsiteService{\n\n    apiManager : ApiManager;\n    user : User;\n    listOfPages : Page[];\n    listOfElements : LortomElement[];\n\n    private _updatePages = new Subject();\n    updatePages$ = this._updatePages.asObservable();\n\n    private _updateElements = new Subject();\n    updateElements$ = this._updateElements.asObservable();\n\n    constructor(private http: Http)\n    {\n        this.apiManager = new ApiManager();\n\n\n        // write the api route for setting\n        const urls = [\n            { namePath : 'getPages', path: 'pages'},\n            { namePath : 'savePage', path: 'page'},\n            { namePath : 'getPageAtt', path: 'pages/attribute/list'},\n            { namePath : 'getElements', path: 'elements'},\n        ];\n        //Add the Api to the ApiManager\n        this.apiManager.addListUrlApi(urls);\n    }\n\n    /**\n     * Check if User has permission\n     * @param name\n     * @returns {boolean}\n     */\n    hasPermissions(name: string) : boolean\n    {\n        if(this.user == null)\n        {\n            this.user = JSON.parse(sessionStorage.getItem('user'));\n        }\n\n        for(let i = 0; i<this.user.permissions.length; i++)\n        {\n            if(this.user.permissions[i].name === name)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * This function return Page by Property\n     * @param name\n     * @param value\n     * @returns {Page}\n     */\n    getPageByProperty(name : string, value : any)\n    {\n        let response: Page;\n        response = null;\n\n        if(this.listOfPages == null)\n        {\n            this.listOfPages = JSON.parse(sessionStorage.getItem('pages'));\n        }\n        this.listOfPages.forEach(\n            (page : Page) => {\n                if(page[name] === value)\n                {\n                    response = page;\n                }\n            }\n        );\n\n        return response;\n    }\n\n    /**\n     * this function return if Pages Exists\n     * @returns {boolean}\n     */\n    checkPagesExist() : boolean\n    {\n        return this.checkItemExist('pages');\n    }\n\n    checkElementsExist() : boolean\n    {\n        return this.checkItemExist('elements');\n    }\n\n    /**\n     * Return if an Item exist\n     * @param name\n     * @returns {boolean}\n     */\n    private checkItemExist(name : string) : boolean\n    {\n        return (sessionStorage.getItem(name) !== null);\n    }\n\n    /**\n     * This function Call API to get List Of Pages\n     * @returns {Observable<R>}\n     */\n    getPagesFrom() : Observable<any>\n    {\n        return this.http.get(this.apiManager.getPathByName('getPages'))\n            .map(\n                (response : Response) => {\n                    return response.json().pages;\n                }\n            );\n    }\n\n    getElementsFrom() : Observable<any>\n    {\n        return this.http.get(this.apiManager.getPathByName('getElements'))\n            .map(\n                (response : Response) => {\n                    return response.json().elements;\n                }\n            );\n    }\n\n    /**\n     * This function set pages and store into a Session\n     * @param pages\n     */\n    setPages(pages : Page[]) : void\n    {\n        this.setItem('pages',pages);\n        this.listOfPages = pages;\n    }\n\n    setElements(elements : LortomElement[]) : void\n    {\n        this.setItem('elements',elements);\n        this.listOfElements = elements;\n    }\n\n    private setItem(name : string, list :any) : void\n    {\n        sessionStorage.setItem(name,JSON.stringify(list));\n    }\n\n    private getItem(name : string, prop : string) : any\n    {\n        if(this[prop] == null) {\n            return JSON.parse(sessionStorage.getItem(name));\n        }\n        else\n        {\n            return this[prop];\n        }\n    }\n\n    private deleteItem(name : string, prop : string) : void\n    {\n        this[prop] = null;\n        sessionStorage.removeItem(name);\n    }\n\n    /**\n     * This function get listOfPages\n     * @returns {any}\n     */\n    getPages() : Page[]\n    {\n        return this.getItem('pages','listOfPages') as Page[];\n    }\n\n    getElements() : LortomElement []\n    {\n        return this.getItem('elements','listOfElements') as LortomElement[];\n    }\n\n    /**\n     * This Function call API in order to Delete a list of Pages\n     * @param pages\n     * @returns {Observable<R>}\n     */\n    deletePages(pages : Page []) : Observable<any>\n    {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n        return this.http.put(this.apiManager.getPathByName('getPages'),pages,options)\n            .map(\n                (response : Response) => {\n                    return response.json().pages;\n                }\n            );\n    }\n\n    deleteElements(el : LortomElement []) : Observable <any>\n    {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n        return this.http.put(this.apiManager.getPathByName('getElements'),el,options)\n            .map(\n                (response : Response) => {\n                    return response.json().elements;\n                }\n            );\n    }\n\n    /**\n     *This function call API in order to create a Page.\n     * @param page\n     * @returns {Observable<R>}\n     */\n    createPage(page : Page) :Observable<any>\n    {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n        return this.http.post(this.apiManager.getPathByName('savePage'),page,options)\n            .map(\n                (response : Response) => {\n                    console.log(response);\n                    return response.json().page;\n                }\n            );\n    }\n\n    setPage(page : Page)\n    {\n        let pages = this.getPages();\n        pages.push(page);\n        this.deletePageFromCache();\n        this.setPages(pages);\n    }\n\n    deletePageFromCache() : void\n    {\n        this.deleteItem('pages','listOfPages');\n    }\n\n    updateListOfPages()\n    {\n        this._updatePages.next();\n    }\n\n    updateListOfElements()\n    {\n        this._updateElements.next();\n    }\n\n\n    getPageAtt() : Observable<any>\n    {\n        return this.http.get(this.apiManager.getPathByName('getPageAtt'))\n            .map(\n                (response : Response) => {\n                    return response.json();\n                }\n            );\n    }\n\n    /**\n     * This function delete from listOfPages one page\n     * @param page\n     */\n    erasePage (page : Page){\n        let index = this.listOfPages.indexOf(page);\n\n        if(index > -1)\n        {\n            this.listOfPages.splice(index,1);\n        }\n    }\n\n    /**\n     * this is HTTP request to API\n     * @param page\n     * @returns {Observable<R>}\n     */\n    savePage(page : Page) : Observable<any>\n    {\n        let headers = new Headers({'Content-Type' : 'application/json'});\n        let options = new RequestOptions({headers : headers});\n\n\n        return this.http.put(this.apiManager.getPathByName('savePage'),page,options)\n            .map(\n                (response : Response) => {\n                    return response.json().page;\n                }\n            );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/Services/website.service.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/pages']\\\" data-toggle=\\\"tab\\\"> Pages</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/menu']\\\" data-toggle=\\\"tab\\\"> Menu</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/components']\\\" data-toggle=\\\"tab\\\"> Component</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <a  href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Element</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                                <div class=\\\"dataTables_length\\\">\\n                                    <label>\\n                                        Show\\n                                        <select class=\\\"form-control input-sm\\\" name=\\\"example_length\\\">\\n                                            <option value=\\\"10\\\">10</option>\\n                                        </select>\\n                                        entries\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/website/elements/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteElements()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Name</a>\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let el of listOfElements\\\">\\n                                        <td>\\n                                            <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,page)\\\" [(ngModel)] = \\\"el.check\\\">\\n                                        </td>\\n                                        <td>\\n                                            {{el.name}}\\n                                        </td>\\n                                        <td>\\n                                            <a [routerLink] = \\\"['/backend/website/elements',el.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <lt-pagination\\n                                [page] = \\\"1\\\"\\n                                [count]=\\\"0\\\"\\n                                [loading]=\\\"false\\\"\\n                                [perPage]=\\\"5\\\"\\n                                [pagesToShow]=\\\"1\\\" >\\n                        </lt-pagination>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Elements/elements.component.html\n// module id = ../../../../../src/plugins/Hardel/Website/component/Elements/elements.component.html\n// module chunks = website.module","/**\n * Created by hernan on 16/11/2017.\n */\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {LortomElement} from \"../../Services/website.interfaces\";\n@Component({\n    selector : 'wb-elements',\n    templateUrl : './elements.component.html',\n    styles : ['']\n})\n\nexport class ElementsComponent implements OnInit\n{\n    listOfElements : LortomElement [];\n    myRoot = '/backend/website/elements';\n    isRoot = false;\n\n    listaElementsDelete : LortomElement[];\n\n    constructor(private ecService : WebsiteService, private router : Router) {\n\n        if(!this.ecService.hasPermissions(\"Hardel.Website.Pages\"))\n        {\n            this.router.navigate(['/backend/dashboard']);\n        }\n\n        this.listaElementsDelete = [];\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n\n        this.retrieveListOfElements();\n        this.ecService.updateElements$.subscribe(\n            () => {\n                this.retrieveListOfElements();\n            }\n        );\n    }\n    ngOnInit(){}\n\n    retrieveListOfElements()\n    {\n        if(!this.ecService.checkElementsExist())\n        {\n            this.ecService.getElementsFrom().subscribe(\n                (elements: LortomElement[]) => {\n\n                    this.listOfElements = elements;\n                    this.listOfElements.forEach((el : LortomElement) => {\n                        el.check = false;\n                    });\n                    this.ecService.setElements(this.listOfElements);\n                }\n            );\n        }\n        else {\n            this.listOfElements = this.ecService.getElements();\n            this.listOfElements.forEach((item : any) => {\n                if(!item.hasOwnProperty('check'))\n                {\n                    item.check = false;\n                }\n            });\n        }\n    }\n\n    eventChange(ev,data : LortomElement) : void\n    {\n        if(ev.target.checked)\n        {\n            this.listaElementsDelete.push(data);\n        }\n        else\n        {\n            let index = this.listaElementsDelete.indexOf(data);\n\n            if(index > -1)\n            {\n                this.listaElementsDelete.splice(index,1);\n            }\n        }\n    }\n\n    deleteElements()\n    {\n        if(this.listaElementsDelete.length > 0)\n        {\n            if(confirm('Do you really want delete this Roles?'))\n            {\n                this.ecService.deleteElements(this.listaElementsDelete).subscribe(\n                    (data : any) => {\n                        this.listaElementsDelete = [];\n                        this.listOfElements = data;\n                        this.ecService.setElements(this.listOfElements);\n                    }\n                );\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Elements/elements.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"title\\\" class=\\\"col-md-2 control-label\\\">Title</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" id=\\\"title\\\" [(ngModel)] = \\\"page.title\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"slug\\\" class=\\\"col-md-2 control-label\\\">Slug</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"slug\\\" placeholder=\\\"Slug\\\" id=\\\"slug\\\" [(ngModel)] = \\\"page.slug\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"fileName\\\" class=\\\"col-md-2 control-label\\\">File Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fileName\\\" placeholder=\\\"File Name\\\" id=\\\"fileName\\\" [(ngModel)] = \\\"page.fileName\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"meta_tag\\\" class=\\\"col-md-2 control-label\\\">Meta Tag</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_tag\\\" placeholder=\\\"Meta Tag\\\" id=\\\"meta_tag\\\" [(ngModel)] = \\\"page.metaTag\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"meta_desc\\\" class=\\\"col-md-2 control-label\\\">Meta Desc</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_desc\\\" placeholder=\\\"Meta Desc\\\" id=\\\"meta_desc\\\" [(ngModel)] = \\\"page.metaDesc\\\" >\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"new-page\\\" class=\\\"col-md-2 control-label\\\">State</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <select class=\\\"form-control\\\" name=\\\"state\\\" [(ngModel)] = \\\"page.state\\\">\\n                                        <option *ngFor=\\\"let x of listOfState\\\" [ngValue]=\\\"x\\\">{{x.label}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"new-page\\\" class=\\\"col-md-2 control-label\\\">Content</label>\\n                                <div class=\\\"col-md-10\\\">\\n                                   <app-editor [elementId]=\\\"'new-page'\\\" id=\\\"new-page\\\" [content]=\\\"page.content\\\" (onEditorKeyup)=\\\"keyupHandlerFunction($event)\\\"></app-editor>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/NewPage/pagenew.component.html\n// module id = ../../../../../src/plugins/Hardel/Website/component/NewPage/pagenew.component.html\n// module chunks = website.module","\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Page} from \"../../Services/website.interfaces\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector : 'wb-new-page',\n    templateUrl : './pagenew.component.html',\n    styles : ['']\n})\n\nexport class PageNewComponent implements OnInit\n{\n    page : Page;\n    copyPage : Page;\n    listOfState : {id? : number, label? : string}[];\n\n    constructor(private pn_Service : WebsiteService, private rout : Router){\n        this.page =  {\n            id : -1,\n            title : '',\n            slug : '',\n            metaTag : '',\n            metaDesc : '',\n            check : false,\n            state : {},\n            content: '',\n            fileName : '',\n        }\n\n        this.clonePage();\n\n        this.pn_Service.getPageAtt().subscribe(\n            (data : any) => {\n               this.listOfState = data.states;\n            }\n        );\n    }\n    ngOnInit() {}\n\n    resetMode(){\n        if (confirm('Do you want to reset all data?')) {\n            this.cloneCopyPage();\n        }\n    }\n\n    clonePage()\n    {\n        this.copyPage = Object.assign({},this.page);\n    }\n\n    cloneCopyPage()\n    {\n        this.page = Object.assign({},this.copyPage);\n    }\n\n    saveMode()\n    {\n        if(this.isEqual(this.page,this.copyPage))\n        {\n            console.log('forza lazio');\n            this.pn_Service.createPage(this.page).subscribe(\n                (page : Page) => {\n                    this.pn_Service.setPage(page);\n                    this.pn_Service.updateListOfPages();\n                    this.rout.navigate(['/backend/website/pages']);\n                }\n            );\n        }\n        else\n        {\n            console.log('roma merda');\n        }\n    }\n\n    isEqual(v1,v2)\n    {\n        return (v1.title != v2.title && v1.slug != v2.slug);\n    }\n\n    keyupHandlerFunction(event)\n    {\n        this.page.content = event;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/NewPage/pagenew.component.ts","module.exports = \"<form class=\\\"form\\\">\\n    <div class=\\\"portlet\\\">\\n        <div class=\\\"portlet-title\\\">\\n            <div class=\\\"caption\\\">\\n                <i class=\\\"fa fa-database\\\"></i>\\n                <span>General Definitions</span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn darkorange\\\" (click)=\\\"editMode()\\\">\\n                    <i class=\\\"fa fa-edit\\\"></i>\\n                    Edit\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"portlet-body\\\">\\n            <div class=\\\"portlet-form-body\\\">\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"title\\\" class=\\\"col-md-2 control-label\\\">Title</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" [ngModel] = \\\"page.title\\\" placeholder=\\\"Title\\\" id=\\\"title\\\" *ngIf=\\\"isEdit === false; else editTitle\\\" readonly>\\n                                    <ng-template #editTitle>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" id=\\\"title\\\" [(ngModel)] = \\\"page.title\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"slug\\\" class=\\\"col-md-2 control-label\\\">Slug</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"slug\\\" placeholder=\\\"Slug\\\" id=\\\"slug\\\" [ngModel] = \\\"page.slug\\\" *ngIf=\\\"isEdit === false; else editSlug\\\" readonly>\\n                                    <ng-template #editSlug>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"slug\\\" placeholder=\\\"Slug\\\" id=\\\"slug\\\" [(ngModel)] = \\\"page.slug\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"fileName\\\" class=\\\"col-md-2 control-label\\\">File Name</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fileName\\\" placeholder=\\\"File Name\\\" id=\\\"fileName\\\" [ngModel] = \\\"page.fileName\\\" *ngIf=\\\"isEdit === false; else editFileName\\\" readonly>\\n                                    <ng-template #editFileName>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fileName\\\" placeholder=\\\"File Name\\\" id=\\\"fileName\\\" [(ngModel)] = \\\"page.fileName\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"meta_tag\\\" class=\\\"col-md-2 control-label\\\">Meta Tag</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_tag\\\" placeholder=\\\"Meta Tag\\\" id=\\\"meta_tag\\\" [ngModel] = \\\"page.metaTag\\\" *ngIf=\\\"isEdit === false; else editMetaTag\\\" readonly>\\n                                    <ng-template #editMetaTag>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_tag\\\" placeholder=\\\"Meta Tag\\\" id=\\\"meta_tag\\\" [(ngModel)] = \\\"page.metaTag\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"meta_desc\\\" class=\\\"col-md-2 control-label\\\">Meta Desc</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_desc\\\" placeholder=\\\"Meta Desc\\\" id=\\\"meta_desc\\\" [ngModel] = \\\"page.metaDesc\\\" *ngIf=\\\"isEdit === false; else editMetaDesc\\\" readonly>\\n                                    <ng-template #editMetaDesc>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"meta_desc\\\" placeholder=\\\"Meta Desc\\\" id=\\\"meta_desc\\\" [(ngModel)] = \\\"page.metaDesc\\\" >\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"state\\\" class=\\\"col-md-2 control-label\\\">State</label>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <select class=\\\"form-control\\\" name=\\\"state\\\"  id=\\\"state\\\" *ngIf=\\\"isEdit === false; else editState\\\" disabled>\\n                                        <ng-container>\\n                                            <option *ngFor=\\\"let x of listOfState\\\" [ngValue]=\\\"x\\\" [attr.selected] = \\\"x == page.state ? true : null\\\">{{x.label}}</option>\\n                                        </ng-container>\\n                                    </select>\\n                                    <ng-template #editState>\\n                                        <select class=\\\"form-control\\\" name=\\\"state\\\" [(ngModel)] = \\\"page.state\\\">\\n                                            <option *ngFor=\\\"let x of listOfState\\\" [ngValue]=\\\"x\\\" [attr.selected] = \\\"x == page.state ? true : null\\\">{{x.label}}</option>\\n                                        </select>\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"form-group flex-group\\\">\\n                                <label for=\\\"edit-page\\\" class=\\\"col-md-2 control-label\\\">Content</label>\\n                                <div class=\\\"col-md-10\\\">\\n                                    <div class=\\\"form-control\\\" [innerHtml] = \\\"page.content\\\" *ngIf=\\\"isEdit === false; else editContent\\\" disabled></div>\\n                                    <ng-template #editContent>\\n                                        <app-editor [elementId]=\\\"'edit-page'\\\" id=\\\"edit-page\\\" [content]=\\\"page.content\\\" (onEditorKeyup)=\\\"keyupHandlerFunction($event)\\\"></app-editor>\\n                                    </ng-template>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <button class=\\\"btn orange\\\" (click)=\\\"saveMode()\\\">Save</button>\\n            <button class=\\\"btn red\\\" (click)=\\\"resetMode()\\\">Reset</button>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Page/page.component.html\n// module id = ../../../../../src/plugins/Hardel/Website/component/Page/page.component.html\n// module chunks = website.module","\n\n\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {Page} from \"../../Services/website.interfaces\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n@Component({\n    selector : 'wb-page',\n    templateUrl : './page.component.html',\n    styles : ['']\n})\n\nexport class PageComponent implements OnInit\n{\n    @Input() page : Page;\n    copyPage : Page;\n    id : number;\n    private sub : any;\n    isEdit : boolean;\n    query : string;\n    notFound : boolean;\n    listOfState : {id? : number, label? : string}[];\n\n    constructor(private pService : WebsiteService, private router : ActivatedRoute,private nav : Router) {\n        this.isEdit = false;\n        this.notFound = false;\n        this.query = '';\n        this.page = {\n            id : -2,\n            title : '',\n            check : false,\n            state : {},\n            metaDesc : '',\n            metaTag : '',\n            slug : '',\n            fileName : '',\n            content : ''\n        };\n        this.pService.getPageAtt().subscribe(\n            (data : any) => {\n                this.listOfState = data.states;\n            }\n        );\n        this.sub = this.router.params.subscribe(\n            (params) => {\n                this.id = +params['id'];\n                this.page = this.pService.getPageByProperty('id',this.id);\n                if(this.page != null)\n                {\n                    this.notFound = true;\n                }\n                else\n                {\n                    this.nav.navigate(['/backend/not-found']);\n                }\n                this.clonePage();\n            }\n        );\n    }\n    ngOnInit() {}\n\n    /**\n     * This function pass into edit Mode\n     */\n    editMode(){\n        //passa in modalità edit\n        this.isEdit = !this.isEdit;\n    }\n\n    resetMode(){\n        if (confirm('Do you want to reset all data?')) {\n            this.cloneCopyPage();\n        }\n    }\n\n    clonePage()\n    {\n        this.copyPage = Object.assign({},this.page);\n    }\n\n    cloneCopyPage()\n    {\n        this.page = Object.assign({},this.copyPage);\n    }\n\n    saveMode()\n    {\n        if(this.page.slug.length>0)\n        {\n            this.pService.savePage(this.page).subscribe(\n                (page : Page) => {\n                    this.page = page;\n                    this.clonePage();\n                    this.editMode();\n                }\n            );\n        }\n        else\n        {\n            alert('The slug cannot be empty, please!');\n            this.cloneCopyPage();\n            return;\n        }\n    }\n\n    keyupHandlerFunction(event)\n    {\n        this.page.content = event;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Page/page.component.ts","module.exports = \"<div class=\\\"tabbable-custom\\\" *ngIf=\\\"isRoot === true\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"active\\\">\\n            <a href=\\\"#tab_1\\\" data-toggle=\\\"tab\\\"> Pages</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/menu']\\\" data-toggle=\\\"tab\\\"> Menu</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/components']\\\" data-toggle=\\\"tab\\\"> Component</a>\\n        </li>\\n        <li>\\n            <a [routerLink]=\\\"['/backend/website/elements']\\\" data-toggle=\\\"tab\\\"> Element</a>\\n        </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n        <div class=\\\"tab-pane active\\\" id=\\\"tab_1\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n\\n                </div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"wrapper\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-8\\\">\\n                                <lt-entry-pagination\\n                                [entry]=\\\"'50-5'\\\"\\n                                (onEntry)=\\\"onPerPage($event)\\\"\\n                                >\\n                                </lt-entry-pagination>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <div class=\\\"dataTables_filter\\\">\\n                                    <label>\\n                                        Search:\\n                                        <input type=\\\"search\\\" class=\\\"form-control input-sm\\\">\\n                                    </label>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/backend/website/pages/new']\\\"><i class=\\\"fa fa-file\\\"></i> New</a>\\n                                    <a class=\\\"btn btn-danger\\\" (click)=\\\"deletePages()\\\"><i class=\\\"fa fa-times\\\"></i> Delete</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 30px;\\\"></th>\\n                                        <th>\\n                                            <a>Title</a>\\n                                        </th>\\n                                        <th>\\n                                            Slug\\n                                        </th>\\n                                        <th style=\\\"width: 50px;\\\"></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let page of listaPages\\\">\\n                                        <td>\\n                                            <input type=\\\"checkbox\\\" (change)=\\\"eventChange($event,page)\\\" [(ngModel)] = \\\"page.check\\\">\\n                                        </td>\\n                                        <td>\\n                                            {{page.title}}\\n                                        </td>\\n                                        <td>\\n                                            {{page.slug}}\\n                                        </td>\\n                                        <td>\\n                                            <a [routerLink] = \\\"['/backend/website/pages',page.id]\\\"><i class=\\\"fa fa-edit\\\" style=\\\"color:orange; font-size: 16px;\\\"></i></a>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <lt-pagination\\n                            [pagesToShow]=\\\"3\\\"\\n                            [perPage]=\\\"5\\\"\\n                            [count]=\\\"listaPages.length\\\"\\n                            [loading]=\\\"false\\\"\\n                            [page]=\\\"actualPage\\\"\\n                            (goNext)=\\\"onNext($event)\\\"\\n                            (goPage)=\\\"onPage($event)\\\"\\n                            (goPrev)=\\\"onPrev()\\\"\\n                        ></lt-pagination>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Pages/pages.component.html\n// module id = ../../../../../src/plugins/Hardel/Website/component/Pages/pages.component.html\n// module chunks = website.module","\n\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Page} from \"../../Services/website.interfaces\";\nimport {WebsiteService} from \"../../Services/website.service\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {PaginationService} from \"../../../../../services/pagination.service\";\n@Component({\n    selector : 'wb-pages',\n    templateUrl : './pages.component.html',\n    styles : ['']\n})\n\nexport class PagesComponent implements OnInit\n{\n    listaPages : Page[] = [];\n    listaShowPages : Page[];\n    myRoot = '/backend/website/pages';\n    isRoot = false;\n    actualPage : number;\n    perPage : number;\n\n    listaPageDelete : Page[];\n\n    pagServ : PaginationService;\n\n    constructor(private wb_Service : WebsiteService, private router :Router) {\n\n        if(!this.wb_Service.hasPermissions(\"Hardel.Website.Pages\"))\n        {\n            this.router.navigate(['/backend/dashboard']);\n        }\n        this.listaPageDelete = [];\n\n        //This is to manage the Pagination\n        this.pagServ = new PaginationService();\n        this.actualPage = 1;\n        this.perPage = 3;\n\n        this.router.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n        this.retrieveListOfPages();\n        this.wb_Service.updatePages$.subscribe(\n            () => {\n                this.retrieveListOfPages();\n            }\n        );\n    }\n\n    ngOnInit() {\n    }\n\n    retrieveListOfPages() : void\n    {\n        if(!this.wb_Service.checkPagesExist())\n        {\n            this.wb_Service.getPagesFrom().subscribe(\n                (pages: Page[]) => {\n\n                    this.listaPages = pages;\n                    this.listaPages.forEach((page : Page) => {\n                        page.check = false;\n                    });\n                    this.wb_Service.setPages(this.listaPages);\n                   this.updateListaShow();\n                }\n            );\n        }\n        else {\n            this.listaPages = this.wb_Service.getPages();\n            this.listaPages.forEach((item : any) => {\n                if(!item.hasOwnProperty('check'))\n                {\n                    item.check = false;\n                }\n            });\n            this.updateListaShow();\n        }\n    }\n\n    onPerPage(n : number)\n    {\n        this.perPage = n;\n    }\n\n    private updateListaShow()\n    {\n        this.listaShowPages = this.pagServ.getShowList({\n            entry : this.perPage,\n            list : this.listaPages,\n            pageToShow : this.actualPage\n        });\n    }\n\n    onPrev()\n    {\n        this.actualPage--;\n        this.updateListaShow();\n    }\n\n    onNext(ev)\n    {\n        this.actualPage++;\n        this.updateListaShow();\n    }\n\n    onPage(page)\n    {\n        this.actualPage = page;\n        this.updateListaShow();\n    }\n\n    /**\n     * function to push or splice item into Deleted List of Roles\n     * @param ev\n     * @param data\n     */\n    eventChange(ev,data : Page) : void\n    {\n        if(ev.target.checked)\n        {\n            this.listaPageDelete.push(data);\n        }\n        else\n        {\n            let index = this.listaPageDelete.indexOf(data);\n\n            if(index > -1)\n            {\n                this.listaPageDelete.splice(index,1);\n            }\n        }\n    }\n\n    deletePages()\n    {\n        if(this.listaPageDelete.length > 0)\n        {\n            if(confirm('Do you really want delete this Roles?'))\n            {\n                this.wb_Service.deletePages(this.listaPageDelete).subscribe(\n                    (data : any) => {\n                        this.listaPageDelete = [];\n                        this.listaPages = data;\n                        this.wb_Service.setPages(this.listaPages);\n                    }\n                );\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/Pages/pages.component.ts","/**\n * Created by hernan on 13/11/2017.\n */\n\n\nexport {WebsiteComponent} from './website.component';\nexport {PagesComponent} from './Pages/pages.component';\nexport {PageNewComponent} from './NewPage/pagenew.component';\nexport {PageComponent} from './Page/page.component';\nexport {ElementsComponent} from './Elements/elements.component';\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/index.ts","module.exports = \"<div class=\\\"content-box\\\">\\n    <div class=\\\"content-header\\\">\\n        <h1>Website</h1>\\n        <breadcrumbs></breadcrumbs>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n        <div class=\\\"portlet\\\" *ngIf=\\\"isRoot === true\\\">\\n            <div class=\\\"portlet-title\\\">\\n                <div class=\\\"caption\\\">\\n                    <i class=\\\"fa fa-database\\\"></i>\\n                    <span>Overviews</span>\\n                </div>\\n                <div class=\\\"actions\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"portlet-body\\\">\\n                <div class=\\\"tiles\\\">\\n                    <a [routerLink]=\\\"['/backend/website/pages']\\\">\\n                        <div class=\\\"tile double bg-cyan\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-clone fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Pages\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <a [routerLink]=\\\"['/backend/website/menu']\\\">\\n                        <div class=\\\"tile bg-orange\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-list fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Menu\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <a [routerLink]=\\\"['/backend/website/components']\\\">\\n                        <div class=\\\"tile bg-lightgreen\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-cubes fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Component\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <a [routerLink]=\\\"['/backend/website/elements']\\\">\\n                        <div class=\\\"tile bg-fucsia\\\">\\n                            <div class=\\\"tile-body\\\">\\n                                <i class=\\\"fa fa-cube fa-6\\\"></i>\\n                            </div>\\n                            <div class=\\\"tile-object\\\">\\n                                <div class=\\\"name\\\">\\n                                    Element\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/website.component.html\n// module id = ../../../../../src/plugins/Hardel/Website/component/website.component.html\n// module chunks = website.module","import {Component, OnInit} from \"@angular/core\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n@Component({\n    selector: 'app-website',\n    templateUrl: './website.component.html',\n})\n\nexport class WebsiteComponent implements OnInit {\n    isRoot : boolean;\n    myRoot = '/backend/website';\n    constructor(private r: Router){\n        this.isRoot = true;\n\n        this.r.events.subscribe(\n            (val) => {\n                if(val instanceof NavigationEnd)\n                {\n                    if(this.myRoot === val.url)\n                    {\n                        this.isRoot = true;\n                    }\n                    else\n                    {\n                        this.isRoot = false;\n                    }\n                }\n            }\n        );\n    }\n    ngOnInit() {}\n}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/component/website.component.ts","import { NgModule } from '@angular/core';\nimport {routing,websiteComponent} from \"./website.routing\";\nimport {BreadCrumbModule} from \"../../../app/backend-module/breadcrumbs/breadcrumbs.module\";\nimport {CommonModule} from \"@angular/common\";\nimport {HttpModule} from \"@angular/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {WebsiteService} from \"./Services/website.service\";\nimport {EditorModule} from \"../../../app/backend-module/Editor/editor\";\nimport {UIElementModule} from \"../../../app/backend-module/UIElement/uielement.module\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        HttpModule,\n        routing,\n        BreadCrumbModule,\n        EditorModule,\n        UIElementModule\n    ],\n    providers : [WebsiteService],\n    declarations: [websiteComponent]\n})\n\nexport class WebsiteModule {}\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/website.module.ts","\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {WebsiteComponent,PagesComponent,PageNewComponent,PageComponent,ElementsComponent} from './component';\nimport {ModuleWithProviders} from \"@angular/core\";\n\n\nconst routes : Routes = [\n    {path:'', component: WebsiteComponent, data : { breadcrumb : 'Website'}, children : [\n        {path: 'pages', component: PagesComponent, data : {breadcrumb : 'Pages'}, children : [\n            {path: 'new', component : PageNewComponent, data : {breadcrumb : 'New'}},\n            {path: ':id', component : PageComponent, data : {breadcrumb : 'Page'}}\n        ]},\n        {path: 'elements', component: ElementsComponent, data : {breadcrumb : 'Elements'}}\n    ]}\n];\n\nexport const routing : ModuleWithProviders = RouterModule.forChild(routes);\n\nexport const websiteComponent = [WebsiteComponent,PagesComponent, PageNewComponent,PageComponent,ElementsComponent];\n\nconsole.log(websiteComponent);\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/plugins/Hardel/Website/website.routing.ts","/**\n * Created by hernan on 16/11/2017.\n */\n\n\n\nexport class PaginationService{\n\n    entry : number;\n    list : any;\n    length: number;\n    perPage : number;\n    private min : number;\n    private max : number;\n    pageToShow : number;\n\n    constructor(){}\n\n    getShowList(obj : ObjPagination)\n    {\n        this.entry = obj.entry;\n        this.list = obj.list;\n        this.length = obj.list.length;\n        this.perPage = Math.ceil(this.length/this.entry);\n        this.min = 1;\n        this.max = Object.assign({},this.perPage);\n        this.pageToShow = obj.pageToShow;\n\n        let iTO = (this.pageToShow*this.entry) - this.entry;\n\n        let counter = (this.pageToShow == this.max) ? this.length : this.entry;\n        let show = [];\n\n        for(let i=0; i<counter; i++)\n        {\n            let showI = i+iTO;\n\n            if(showI in this.list)\n                show.push(this.list[showI]);\n        }\n\n        return show;\n    }\n}\n\n\nexport interface ObjPagination\n{\n    entry : number;\n    list : any;\n    pageToShow : number;\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Applications/XAMPP/xamppfiles/htdocs/Lortom/angular-backend/src/services/pagination.service.ts"],"sourceRoot":"webpack:///"}